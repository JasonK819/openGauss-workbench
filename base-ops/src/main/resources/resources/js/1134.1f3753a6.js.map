{"version":3,"file":"js/1134.1f3753a6.js","mappings":"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","sources":["webpack://web-ui/./src/api/ops/index.ts","webpack://web-ui/./node_modules/vue-loader/dist/exportHelper.js","webpack://web-ui/./src/views/ops/install/components/simple/InstallConfig.vue?64d8","webpack://web-ui/./src/views/ops/install/components/simple/InstallConfig.vue"],"sourcesContent":["import axios from 'axios'\nimport { KeyValue } from '@/types/global'\nimport { downloadPackage, SSHBody } from '@/types/ops/install'\n// import { hostData, hostUserData } from '@/types/resource/host'\n\n// get Key\nexport const getEntryKey = () => {\n  return axios.get('encryption/getKey')\n}\n\nexport const download = (data: downloadPackage) => {\n  return axios.post(`opsCluster/download`, data ? data : {})\n}\n\nexport const getEnvMonitorData = (hostId: string) => {\n  return axios.get(`opsCluster/env/${hostId}`)\n}\n\nexport const installOpenGauss = (data: KeyValue) => {\n  return axios.post('opsCluster/install', data)\n}\n\nexport const importOpenGauss = (data: KeyValue) => {\n  return axios.post('opsCluster/import', data)\n}\n\nexport const quickInstall = (data: KeyValue) => {\n  return axios.post('opsCluster/quickInstall', data)\n}\n\n// one check\nexport const clusterCheck = (data: KeyValue) => {\n  return axios.get('opsCluster/check', {\n    params: data\n  })\n}\n\nexport const uninstallOpenGauss = (data: KeyValue) => {\n  return axios.post('opsCluster/uninstall', data)\n}\n\nexport const hasName = (data: KeyValue) => {\n  return axios.get('opsCluster/hasName', {\n    params: data\n  })\n}\n\nexport const clusterList = () => {\n  return axios.get('opsCluster/listCluster')\n}\n\nexport const getSummary = () => {\n  return axios.get('opsCluster/summary')\n}\n\nexport const openSSH = (data: SSHBody) => {\n  return axios.post('opsCluster/ssh', data)\n}\n\nexport const clusterMonitor = (data: KeyValue) => {\n  return axios.get('opsCluster/monitor', {\n    params: data\n  })\n}\n\nexport const start = (data: KeyValue) => {\n  return axios.post('opsCluster/start', data)\n}\n\nexport const stop = (data: KeyValue) => {\n  return axios.post('opsCluster/stop', data)\n}\n\nexport const restart = (data: KeyValue) => {\n  return axios.post('opsCluster/restart', data)\n}\n\nexport const getHostByClusterId = (data: KeyValue) => {\n  return axios.get('opsCluster/listHost', {\n    params: data\n  })\n}\n\n// host interface\nexport const listInstallPackage = (path?: string) => {\n  return axios.get(path ? `opsCluster/listInstallPackage?path=${path}` : 'opsCluster/listInstallPackage')\n}\n\n// page\nexport const hostPage = (query: any) => {\n  return axios.get('host/page', {\n    params: query\n  })\n}\n\nexport const hostListAll = () => {\n  return axios.get('host/listAll')\n}\n\nexport const addHost = (data: KeyValue) => {\n  return axios.post('host', data)\n}\n\nexport const editHost = (hostId: string, data: KeyValue) => {\n  return axios.put(`host/${hostId}`, data)\n}\n\nexport const hostPing = (data: KeyValue) => {\n  return axios.post('host/ping', data)\n}\n\nexport const hostPingById = (hostId: string) => {\n  return axios.get(`host/ping/${hostId}`)\n}\n\nexport const delHost = (hostId: string) => {\n  return axios.delete(`host/${hostId}`)\n}\n\nexport const hostUserPage = (hostId: string) => {\n  return axios.get(`hostUser/page/${hostId}`)\n}\n\nexport const hostUserListAll = (hostId: string) => {\n  return axios.get(`hostUser/listAll/${hostId}`)\n}\n\nexport const hostUserListWithoutRoot = (hostId: string) => {\n  return axios.get(`hostUser/listAllWithoutRoot/${hostId}`)\n}\n\nexport const addHostUser = (data: KeyValue) => {\n  return axios.post('hostUser', data)\n}\n\nexport const editHostUser = (hostUserId: string, data: KeyValue) => {\n  return axios.put(`hostUser/${hostUserId}`, data)\n}\n\nexport const delHostUser = (hostUserId: string) => {\n  return axios.delete(`hostUser/${hostUserId}`)\n}\n\nexport const azListAll = () => {\n  return axios.get('az/listAll')\n}\n\nexport const addAz = (data: KeyValue) => {\n  return axios.post('az', data)\n}\n\nexport const editAz = (azId: string, data: KeyValue) => {\n  return axios.put(`az/${azId}`, data)\n}\n\n// page\nexport const azPage = (query: any) => {\n  return axios.get('az/page', {\n    params: query\n  })\n}\n\nexport const delAz = (azId: string) => {\n  return axios.delete(`az/${azId}`)\n}\n\nexport const logPath = (data: KeyValue) => {\n  return axios.get('opsCluster/logPath', {\n    params: data\n  })\n}\n\nexport const getLs = (data: KeyValue) => {\n  return axios.get('opsCluster/ls', {\n    params: data\n  })\n}\n\nexport const slowSql = (data: KeyValue) => {\n  return axios.get('opsCluster/slowSql', {\n    params: data\n  })\n}\n\nexport const auditLog = (data: KeyValue) => {\n  return axios.get('opsCluster/auditLog', {\n    params: data\n  })\n}\n\nexport const downloadFile = (data: KeyValue) => {\n  return axios.get('opsCluster/download', {\n    params: data\n  })\n}\n\n// WDR\nexport const wdrList = (data: KeyValue) => {\n  return axios.get('wdr/list', {\n    params: data\n  })\n}\nexport const wdrGenerate = (data: KeyValue) => {\n  return axios.post('wdr/generate', data)\n}\n\nexport const wdrDelete = (id: string) => {\n  return axios.delete('wdr/del/' + id)\n}\n\nexport const createSnapshot = (data: KeyValue) => {\n  return axios.get('wdr/createSnapshot', {\n    params: data\n  })\n}\n\nexport const downloadWdrFile = (data: KeyValue) => {\n  return axios.get('wdr/downloadWdr', {\n    params: data\n  })\n}\n\nexport const listSnapshot = (data: KeyValue) => {\n  return axios.get('wdr/listSnapshot', {\n    params: data\n  })\n}\n\n// backup\nexport const clusterBackup = (data: KeyValue) => {\n  return axios.post('backup/backup', data)\n}\n// backup page\nexport const backupPage = (data: KeyValue) => {\n  return axios.get('backup/page', {\n    params: data\n  })\n}\n// backup recover\nexport const clusterRecover = (id: string, data: KeyValue) => {\n  return axios.post('backup/recover/' + id, data)\n}\n// backup delete\nexport const backupDel = (id: string) => {\n  return axios.delete('backup/del/' + id)\n}\n\n// package manage \nexport const packageListAll = (data: KeyValue) => {\n  return axios.get('installPackageManager/list', {\n    params: data\n  })\n}\n\nexport const packagePage = (data: KeyValue) => {\n  return axios.get('installPackageManager/page', {\n    params: data\n  })\n}\n\nexport const packageDetailById = (id: string) => {\n  return axios.get('installPackageManager/detail/' + id)\n}\n\nexport const packageDel = (id: string) => {\n  return axios.delete('installPackageManager/' + id)\n}\n\nexport const addPackage = (data: KeyValue) => {\n  return axios.post('installPackageManager/save', data)\n}\n\nexport const editPackage = (azId: string, data: KeyValue) => {\n  return axios.put(`installPackageManager/update/${azId}`, data)\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-21797c30\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"install-config-c\" }\nconst _hoisted_2 = { class: \"flex-row-center\" }\nconst _hoisted_3 = { class: \"flex-col-start\" }\nconst _hoisted_4 = { class: \"ft-b mb\" }\n\nimport { computed, onMounted, reactive, ref } from 'vue'\nimport { MiniNodeConfig, MinimalistInstallConfig, ClusterRoleEnum } from '@/types/ops/install'\nimport { KeyValue } from '@/types/global'\n\nimport { useOpsStore } from '@/store'\nimport { FormInstance } from '@arco-design/web-vue/es/form'\nimport { hostListAll, hostUserListWithoutRoot, hasName } from '@/api/ops'\nimport { encryptPassword } from '@/utils/jsencrypt'\nimport { Message } from '@arco-design/web-vue'\nimport { useI18n } from 'vue-i18n'\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props, { expose }) {\n\nconst { t } = useI18n()\nconst installStore = useOpsStore()\nconst data = reactive({\n  form: {\n    clusterId: '',\n    hostId: '',\n    rootPassword: '',\n    privateIp: '',\n    publicIp: '',\n    installUserId: '',\n    installPath: '/opt/openGauss',\n    dataPath: '/opt/openGauss/data',\n    port: Number(5432),\n    databaseUsername: '',\n    databasePassword: '',\n    isInstallDemoDatabase: true\n  },\n  rules: {}\n})\n\nconst hostListLoading = ref<boolean>(false)\nconst hostList = ref<KeyValue[]>([])\n\nonMounted(() => {\n  initData()\n  if (installStore.getMiniConfig && installStore.getMiniConfig.nodeConfigList) {\n    const miniConfig: any = installStore.getMiniConfig\n    Object.assign(data.form, {\n      clusterId: miniConfig.nodeConfigList[0].clusterId,\n      hostId: miniConfig.nodeConfigList[0].hostId,\n      rootPassword: miniConfig.nodeConfigList[0].rootPassword,\n      privateIp: miniConfig.nodeConfigList[0].privateIp,\n      publicIp: miniConfig.nodeConfigList[0].publicIp,\n      installUserId: miniConfig.nodeConfigList[0].installUserId,\n      installPath: miniConfig.nodeConfigList[0].installPath,\n      dataPath: miniConfig.nodeConfigList[0].dataPath,\n      port: miniConfig.port,\n      databaseUsername: miniConfig.databaseUsername,\n      databasePassword: miniConfig.databasePassword,\n      isInstallDemoDatabase: miniConfig.nodeConfigList[0].isInstallDemoDatabase\n    })\n  }\n  getHostList()\n})\n\nconst initData = () => {\n  data.rules = {\n    clusterId: [\n      { required: true, 'validate-trigger': 'blur', message: t('simple.InstallConfig.5mpmu0laqiw0') },\n      {\n        validator: (value: any, cb: any) => {\n          return new Promise(resolve => {\n            const param = {\n              name: value\n            }\n            hasName(param).then((res: KeyValue) => {\n              if (Number(res.code) === 200) {\n                if (res.data.has === 'Y') {\n                  cb(t('simple.InstallConfig.5mpmu0las4g0'))\n                  resolve(false)\n                } else {\n                  resolve(true)\n                }\n              } else {\n                cb(t('simple.InstallConfig.5mpmu0las800'))\n                resolve(false)\n              }\n            })\n          })\n        }\n      }\n    ],\n    port: [{ required: true, 'validate-trigger': 'blur', message: t('simple.InstallConfig.5mpmu0larmo0') }],\n    rootPassword: [{ required: true, 'validate-trigger': 'blur', message: t('simple.InstallConfig.5mpmu0laqwo0') }],\n    installPath: [{ required: true, 'validate-trigger': 'blur', message: t('simple.InstallConfig.5mpmu0lar800') }],\n    dataPath: [{ required: true, 'validate-trigger': 'blur', message: t('simple.InstallConfig.5mpmu0larew0') }],\n    databaseUsername: [{ required: true, 'validate-trigger': 'blur', message: t('simple.InstallConfig.5mpmu0larto0') }],\n    databasePassword: [{ required: true, 'validate-trigger': 'blur', message: t('simple.InstallConfig.5mpmu0las0k0') }]\n  }\n}\n\nconst hostObj = ref<KeyValue>({})\nconst getHostList = () => {\n  hostListLoading.value = true\n  hostListAll().then((res: KeyValue) => {\n    if (Number(res.code) === 200) {\n      hostList.value = []\n      hostList.value = res.data\n      res.data.forEach((item: KeyValue) => {\n        hostObj.value[item.hostId] = item\n      })\n      if (!data.form.hostId) {\n        data.form.hostId = hostList.value[0].hostId\n        data.form.privateIp = hostList.value[0].privateIp\n        data.form.publicIp = hostList.value[0].publicIp\n      }\n      changeHostId()\n    } else {\n      Message.error('Failed to obtain the host list data')\n    }\n  }).finally(() => {\n    hostListLoading.value = false\n  })\n}\n\nconst userListByHost = ref<KeyValue[]>([])\nconst changeHostId = () => {\n  if (data.form.hostId) {\n    if (hostObj.value[data.form.hostId]) {\n      data.form.privateIp = hostObj.value[data.form.hostId].privateIp\n      data.form.publicIp = hostObj.value[data.form.hostId].publicIp\n    }\n    hostUserListWithoutRoot(data.form.hostId).then((res: KeyValue) => {\n      if (Number(res.code) === 200) {\n        userListByHost.value = []\n        userListByHost.value = res.data\n        if (userListByHost.value.length) {\n          data.form.installUserId = userListByHost.value[0].hostUserId\n        } else {\n          data.form.installUserId = ''\n        }\n      } else {\n        Message.error('Failed to obtain user data from the host')\n      }\n    })\n  }\n}\n\nconst formRef = ref<FormInstance>()\n\nconst beforeConfirm = async (): Promise<boolean> => {\n  const validRes = await formRef.value?.validate()\n  if (!validRes) {\n    const param = JSON.parse(JSON.stringify(data.form))\n    param.clusterRole = ClusterRoleEnum.MASTER\n    param.clusterName = ''\n    installStore.setInstallContext({ clusterId: param.clusterId })\n    const miniConfig = {\n      clusterName: '',\n      port: param.port,\n      databaseUsername: param.databaseUsername,\n      databasePassword: param.databasePassword,\n      nodeConfigList: [param as MiniNodeConfig]\n    }\n    installStore.setMiniConfig(miniConfig as MinimalistInstallConfig)\n    return true\n  } else {\n    return false\n  }\n}\nconst installType = computed(() => installStore.getInstallConfig.installType)\nexpose({\n  beforeConfirm\n})\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_input = _resolveComponent(\"a-input\")!\n  const _component_a_form_item = _resolveComponent(\"a-form-item\")!\n  const _component_a_option = _resolveComponent(\"a-option\")!\n  const _component_a_select = _resolveComponent(\"a-select\")!\n  const _component_a_input_password = _resolveComponent(\"a-input-password\")!\n  const _component_a_input_number = _resolveComponent(\"a-input-number\")!\n  const _component_a_form = _resolveComponent(\"a-form\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.$t('simple.InstallConfig.5mpmu0lapic0')), 1),\n        _createVNode(_component_a_form, {\n          model: _unref(data).form,\n          rules: _unref(data).rules,\n          style: { width: '800px' },\n          ref: (_value, _refs) => {\n            _refs['formRef'] = _value\n            formRef.value = _value\n          }\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_a_form_item, {\n              field: \"clusterId\",\n              label: _ctx.$t('simple.InstallConfig.5mpmu0laqc80'),\n              \"validate-trigger\": \"blur\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_input, {\n                  modelValue: _unref(data).form.clusterId,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_unref(data).form.clusterId = $event)),\n                  placeholder: _ctx.$t('simple.InstallConfig.5mpmu0laqiw0')\n                }, null, 8, [\"modelValue\", \"placeholder\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"]),\n            _createVNode(_component_a_form_item, {\n              field: \"hostId\",\n              label: _ctx.$t('simple.InstallConfig.5mpmu0laqow0')\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_select, {\n                  loading: hostListLoading.value,\n                  modelValue: _unref(data).form.hostId,\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_unref(data).form.hostId = $event)),\n                  onChange: changeHostId,\n                  placeholder: _ctx.$t('simple.InstallConfig.5mpmu0laqss0')\n                }, {\n                  default: _withCtx(() => [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(hostList.value, (item) => {\n                      return (_openBlock(), _createBlock(_component_a_option, {\n                        key: item.hostId,\n                        value: item.hostId\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(item.publicIp\n                  + '(' +\n                  (item.hostname ? item.hostname : '--') + ')'), 1)\n                        ]),\n                        _: 2\n                      }, 1032, [\"value\"]))\n                    }), 128))\n                  ]),\n                  _: 1\n                }, 8, [\"loading\", \"modelValue\", \"placeholder\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"]),\n            _createVNode(_component_a_form_item, {\n              field: \"rootPassword\",\n              label: _ctx.$t('simple.InstallConfig.else1'),\n              \"validate-trigger\": \"blur\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_input_password, {\n                  modelValue: _unref(data).form.rootPassword,\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_unref(data).form.rootPassword = $event)),\n                  placeholder: _ctx.$t('simple.InstallConfig.5mpmu0laqwo0'),\n                  \"allow-clear\": \"\"\n                }, null, 8, [\"modelValue\", \"placeholder\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"]),\n            _createVNode(_component_a_form_item, {\n              field: \"installUserId\",\n              label: _ctx.$t('simple.InstallConfig.5mpmu0lar0c0')\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_select, {\n                  modelValue: _unref(data).form.installUserId,\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_unref(data).form.installUserId = $event))\n                }, {\n                  default: _withCtx(() => [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userListByHost.value, (item) => {\n                      return (_openBlock(), _createBlock(_component_a_option, {\n                        key: item.hostUserId,\n                        value: item.hostUserId\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(item.username), 1)\n                        ]),\n                        _: 2\n                      }, 1032, [\"value\"]))\n                    }), 128))\n                  ]),\n                  _: 1\n                }, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"]),\n            _createVNode(_component_a_form_item, {\n              field: \"installPath\",\n              label: _ctx.$t('simple.InstallConfig.5mpmu0lar480'),\n              \"validate-trigger\": \"blur\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_input, {\n                  modelValue: _unref(data).form.installPath,\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => (_unref(data).form.installPath = $event)),\n                  placeholder: _ctx.$t('simple.InstallConfig.5mpmu0lar800')\n                }, null, 8, [\"modelValue\", \"placeholder\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"]),\n            _createVNode(_component_a_form_item, {\n              field: \"dataPath\",\n              label: _ctx.$t('simple.InstallConfig.5mpmu0larbk0'),\n              \"validate-trigger\": \"blur\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_input, {\n                  modelValue: _unref(data).form.dataPath,\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => (_unref(data).form.dataPath = $event)),\n                  placeholder: _ctx.$t('simple.InstallConfig.5mpmu0larew0')\n                }, null, 8, [\"modelValue\", \"placeholder\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"]),\n            _createVNode(_component_a_form_item, {\n              field: \"port\",\n              label: _ctx.$t('simple.InstallConfig.5mpmu0larj40'),\n              \"validate-trigger\": \"blur\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_input_number, {\n                  modelValue: _unref(data).form.port,\n                  \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => (_unref(data).form.port = $event)),\n                  placeholder: _ctx.$t('simple.InstallConfig.5mpmu0larmo0')\n                }, null, 8, [\"modelValue\", \"placeholder\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"]),\n            (_unref(installType) === 'import')\n              ? (_openBlock(), _createBlock(_component_a_form_item, {\n                  key: 0,\n                  field: \"databaseUsername\",\n                  label: _ctx.$t('simple.InstallConfig.5mpmu0larq40'),\n                  \"validate-trigger\": \"blur\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_a_input_password, {\n                      modelValue: _unref(data).form.databaseUsername,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => (_unref(data).form.databaseUsername = $event)),\n                      placeholder: _ctx.$t('simple.InstallConfig.5mpmu0larto0'),\n                      \"allow-clear\": \"\"\n                    }, null, 8, [\"modelValue\", \"placeholder\"])\n                  ]),\n                  _: 1\n                }, 8, [\"label\"]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_a_form_item, {\n              field: \"databasePassword\",\n              label: _ctx.$t('simple.InstallConfig.5mpmu0larx00'),\n              \"validate-trigger\": \"blur\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_input_password, {\n                  modelValue: _unref(data).form.databasePassword,\n                  \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => (_unref(data).form.databasePassword = $event)),\n                  placeholder: _ctx.$t('simple.InstallConfig.5mpmu0las0k0'),\n                  \"allow-clear\": \"\"\n                }, null, 8, [\"modelValue\", \"placeholder\"])\n              ]),\n              _: 1\n            }, 8, [\"label\"])\n          ]),\n          _: 1\n        }, 8, [\"model\", \"rules\"])\n      ])\n    ])\n  ]))\n}\n}\n\n})","import script from \"./InstallConfig.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./InstallConfig.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./InstallConfig.vue?vue&type=style&index=0&id=21797c30&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/xielibo/ideawork/huawei/base-ops/web-ui/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21797c30\"]])\n\nexport default __exports__"],"names":["getEntryKey","axios","download","data","getEnvMonitorData","hostId","installOpenGauss","importOpenGauss","quickInstall","clusterCheck","params","uninstallOpenGauss","hasName","clusterList","openSSH","clusterMonitor","start","stop","restart","getHostByClusterId","listInstallPackage","path","hostListAll","hostUserListWithoutRoot","azListAll","logPath","getLs","slowSql","auditLog","downloadFile","wdrList","wdrGenerate","wdrDelete","id","createSnapshot","downloadWdrFile","listSnapshot","clusterBackup","backupPage","clusterRecover","backupDel","packagePage","packageDel","addPackage","editPackage","azId","exports","sfc","props","target","__vccOpts","key","val","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_defineComponent","setup","__props","expose","t","useI18n","installStore","useOpsStore","reactive","form","clusterId","rootPassword","privateIp","publicIp","installUserId","installPath","dataPath","port","Number","databaseUsername","databasePassword","isInstallDemoDatabase","rules","hostListLoading","ref","hostList","onMounted","initData","getMiniConfig","nodeConfigList","miniConfig","Object","assign","getHostList","required","message","validator","value","cb","Promise","resolve","param","name","then","res","code","has","hostObj","forEach","item","changeHostId","Message","finally","userListByHost","length","hostUserId","formRef","beforeConfirm","async","validRes","validate","JSON","parse","stringify","clusterRole","ClusterRoleEnum","clusterName","setInstallContext","setMiniConfig","installType","computed","getInstallConfig","_ctx","_cache","_component_a_input","_resolveComponent","_component_a_form_item","_component_a_option","_component_a_select","_component_a_input_password","_component_a_input_number","_component_a_form","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","$t","_createVNode","model","_unref","style","width","_value","_refs","default","_withCtx","field","label","modelValue","$event","placeholder","_","loading","onChange","_Fragment","_renderList","_createBlock","_createTextVNode","hostname","username","_createCommentVNode","__exports__"],"sourceRoot":""}