{"version":3,"file":"js/7418.22ecefbd.js","mappings":"yKAGO,MAAMA,GAAsBC,EAAAA,EAAAA,IAAY,kBAAmB,CAChEC,MAAO,KACE,CACLC,kBAAmB,CAAC,EACpBC,WAAY,KACZC,YAAY,EACZC,gBAAiB,GACjBC,MAAO,CAAC,EACRC,cAAe,KACfC,KAAM,OAGVC,QAAS,CACPC,QAAST,GAASA,EAAMO,KACxBG,qBAAsBV,GAASA,EAAMC,kBACrCU,cAAeX,GAASA,EAAME,WAC9BU,SAAUZ,GAASA,EAAMK,OAE3BQ,QAAS,CACPC,QAASP,GACPQ,KAAKC,QAAOhB,IACVA,EAAMO,KAAOA,CAAI,GAErB,EAEAU,UAAWC,GACTH,KAAKT,cAAgBY,CACvB,EAEAC,mBAAoBC,GAClBL,KAAKC,QAAOhB,IACVA,EAAMI,gBAAgBiB,KAAKD,EAAK,GAEpC,EAEAE,cAAeC,EAA2BpB,GACxCY,KAAKC,QAAOhB,IACVA,EAAMG,WAAaA,EACnBH,EAAME,WAAaqB,CAAQ,GAE/B,EAEAC,gBACE,MAAMN,EAAO,CACX,CAAEO,GAAI,EAAGC,KAAM,aAAcC,OAAQ,CACnC,CAAEF,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,iBACf,CAAED,GAAI,EAAGC,KAAM,qBAEjB,CAAED,GAAI,EAAGC,KAAM,eAAgBC,OAAQ,CACrC,CAAEF,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,eAGnBX,KAAKd,kBAAoBiB,CAC3B,EAEAU,QAASC,EAAaC,GACpBf,KAAKC,QAAOhB,IACVA,EAAMK,MAAMwB,GAAOC,CAAI,GAE3B,I","sources":["webpack://web-ui/./src/store/modules/modeling/common.ts"],"sourcesContent":["import { KeyValue } from '@/api/modeling/request'\nimport { defineStore } from 'pinia'\n\nexport const useModelCommonStore = defineStore(`modeling-common`, {\n  state: () => {\n    return {\n      currentSelectData: {},\n      selectNode: null as KeyValue | null,\n      showConfig: false,\n      isRegisterNodes: [] as Array<string>,\n      rules: {} as KeyValue,\n      nodeEventData: null as any,\n      i18n: null as any\n    }\n  },\n  getters: {\n    getI18n: state => state.i18n,\n    getCurrentSelectData: state => state.currentSelectData,\n    getSelectNode: state => state.selectNode,\n    getRules: state => state.rules\n  },\n  actions: {\n    setI18n (i18n: any) {\n      this.$patch(state => {\n        state.i18n = i18n\n      })\n    },\n    // nodeEvent\n    nodeEvent (data: any) {\n      this.nodeEventData = data\n    },\n    // add register node\n    setIsResigterNodes (node: string) {\n      this.$patch(state => {\n        state.isRegisterNodes.push(node)\n      })\n    },\n    // modify seleced node\n    setSelectNode (nodeInfo: KeyValue | null, showConfig: boolean) {\n      this.$patch(state => {\n        state.showConfig = showConfig\n        state.selectNode = nodeInfo\n      })\n    },\n    // \n    setSelectData () {\n      const data = [\n        { id: 5, name: 'hs.article', fields: [\n          { id: 1, name: 'article.type' },\n          { id: 2, name: 'article.title' },\n          { id: 3, name: 'article.content' }\n        ] },\n        { id: 1, name: 'hs.user_test', fields: [\n          { id: 1, name: 'user.name' },\n          { id: 2, name: 'user.sex' },\n          { id: 3, name: 'user.age' }\n        ] }\n      ]\n      this.currentSelectData = data\n    },\n    // \n    setRule (key: string, rule: any) {\n      this.$patch(state => {\n        state.rules[key] = rule\n      })\n    }\n  }\n})\n"],"names":["useModelCommonStore","defineStore","state","currentSelectData","selectNode","showConfig","isRegisterNodes","rules","nodeEventData","i18n","getters","getI18n","getCurrentSelectData","getSelectNode","getRules","actions","setI18n","this","$patch","nodeEvent","data","setIsResigterNodes","node","push","setSelectNode","nodeInfo","setSelectData","id","name","fields","setRule","key","rule"],"sourceRoot":""}