{"version":3,"file":"js/733.015787c1.js","mappings":"2LAEO,MAAMA,EAAgB,CAACC,EAA6CC,EAA6BC,KACtG,IAAKF,GAAgC,IAApBA,EAASG,OAAc,OAAO,EAC/C,GAA2B,kBAAhBH,EAAS,IAA0C,kBAAhBA,EAAS,GACrD,OAAyC,IAAlCA,EAASI,QAAQH,GACnB,CACL,MAAMI,EAAML,EACZ,OAA0G,IAAnGK,EAAIC,WAAWC,GAAoBA,EAAML,GAA4B,WAAaD,G,GAIhFO,EAAW,CAACC,EAAaC,EAAYC,KAEhD,GADAC,QAAQC,IAAIJ,EAAKC,EAAOC,GACpBA,EAAM,CACR,MAAMG,EAAWH,EAAKI,UACtBJ,GAAMK,QAAQ,IAAKF,EAAU,CAACL,GAAMQ,KAAKC,MAAMD,KAAKE,UAAUT,KAAW,CAAEU,WAAW,G","sources":["webpack://web-ui/./src/views/modeling/dataflow/child/detail/components/config-panel/utils/tool.ts"],"sourcesContent":["import { KeyValue } from '@/api/modeling/request'\nimport { Cell } from '@antv/x6'\nexport const checkDisabled = (checkArr: Array<KeyValue | number | string>, checkValue: number | string, comparedKey?: string) : boolean => {\n  if (!checkArr || checkArr.length === 0) return false\n  if (typeof checkArr[0] === 'string' || typeof checkArr[0] === 'number') {\n    return checkArr.indexOf(checkValue) !== -1\n  } else {\n    const arr = checkArr as Array<KeyValue>\n    return arr.findIndex((field: KeyValue) => field[comparedKey ? comparedKey : 'value'] === checkValue) !== -1\n  }\n}\n/** When filling in the content, save it in the data of the node itself */\nexport const saveData = (key: string, value: any, cell: Cell) => {\n  console.log(key, value, cell)\n  if (cell) {\n    const cellData = cell.getData()\n    cell?.setData({ ...cellData, [key]: JSON.parse(JSON.stringify(value)) }, { overwrite: true })\n  }\n}\n"],"names":["checkDisabled","checkArr","checkValue","comparedKey","length","indexOf","arr","findIndex","field","saveData","key","value","cell","console","log","cellData","getData","setData","JSON","parse","stringify","overwrite"],"sourceRoot":""}