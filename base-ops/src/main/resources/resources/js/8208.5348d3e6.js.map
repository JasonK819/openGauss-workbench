{"version":3,"file":"js/8208.5348d3e6.js","mappings":"wLAEA,MAAMA,EAAY,CAAC,QAAS,SAAU,SAAU,UAEnCC,EAAc,CAACC,EAAcC,EAAcC,KACtD,MAAMC,EAAeC,IACnBC,EAAAA,EAAAA,QAAgB,CAAED,QAASA,EAASE,SAAU,KAAW,EAE3D,GAA+B,eAA3BL,EAAOM,KAAKC,WAEd,OADAL,EAAYM,EAAAA,EAAAA,OAAAA,EAAc,uCACnB,EAET,GAA+B,eAA3BT,EAAOO,KAAKC,aACTV,EAAUY,SAAST,EAAOM,KAAKC,YAElC,OADAL,EAAYM,EAAAA,EAAAA,OAAAA,EAAc,uCACnB,EAGX,GAAIX,EAAUY,SAASV,EAAOO,KAAKC,aAAeV,EAAUY,SAAST,EAAOM,KAAKC,YAE/E,OADAL,EAAYM,EAAAA,EAAAA,OAAAA,EAAc,uCACnB,EAET,MAAME,EAAgBT,EAAMU,WAC5B,GAA+B,eAA3BZ,EAAOO,KAAKC,WAA6B,CAC3C,MAAMK,EAAqBF,EAAMG,QAAQC,GAAcA,EAAKf,OAAOgB,OAAShB,EAAOiB,KACnF,GAAIJ,EAAWK,OAAS,EAEtB,OADAf,EAAYM,EAAAA,EAAAA,OAAAA,EAAc,uCACnB,C,CAGX,MAAMU,EAAqBR,EAAMG,QAAQC,GAAcA,EAAKd,OAAOe,OAASf,EAAOgB,KACnF,QAAIE,EAAWD,OAAS,KACtBf,EAAYM,EAAAA,EAAAA,OAAAA,EAAc,uCACnB,EAEE,C","sources":["webpack://web-ui/./src/views/modeling/dataflow/child/detail/utils/validate.ts"],"sourcesContent":["import { Edge, Graph } from '@antv/x6'\nimport { Message } from '@arco-design/web-vue'\nconst baseNodes = ['query', 'update', 'delete', 'insert']\nimport i18n from '@/locale/index'\nexport const lineConnect = (source: Edge, target: Edge, graph: Graph): boolean => {\n  const showMessage = (content: string) => {\n    Message.warning({ content: content, duration: 5 * 1000 })\n  }\n  if (target.data.cells_type === 'dataSource') {\n    showMessage(i18n.global.t('modeling.utils.index.5m835tc0m9o0'))\n    return false\n  }\n  if (source.data.cells_type === 'dataSource') {\n    if (!baseNodes.includes(target.data.cells_type)) {\n      showMessage(i18n.global.t('modeling.utils.index.5m835tc0n8k0'))\n      return false\n    }\n  }\n  if (baseNodes.includes(source.data.cells_type) && baseNodes.includes(target.data.cells_type)) {\n    showMessage(i18n.global.t('modeling.utils.index.5m835tc0ndo0'))\n    return false\n  }\n  const edges: Edge[] = graph.getEdges()\n  if (source.data.cells_type !== 'dataSource') {\n    const sourceList: Edge[] = edges.filter((item: any) => item.source.cell === source.id)\n    if (sourceList.length > 1) {\n      showMessage(i18n.global.t('modeling.utils.index.5m835tc0nh00'))\n      return false\n    }\n  }\n  const targetList: Edge[] = edges.filter((item: any) => item.target.cell === target.id)\n  if (targetList.length > 1) {\n    showMessage(i18n.global.t('modeling.utils.index.5m835tc0njw0'))\n    return false\n  }\n  return true\n}\n"],"names":["baseNodes","lineConnect","source","target","graph","showMessage","content","Message","duration","data","cells_type","i18n","includes","edges","getEdges","sourceList","filter","item","cell","id","length","targetList"],"sourceRoot":""}