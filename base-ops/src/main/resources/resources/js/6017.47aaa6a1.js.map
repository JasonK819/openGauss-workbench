{"version":3,"file":"js/6017.47aaa6a1.js","mappings":"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","sources":["webpack://web-ui/./src/store/modules/modeling/data-flow.ts","webpack://web-ui/./node_modules/highlight.js/es/core.js","webpack://web-ui/./node_modules/@highlightjs/vue-plugin/dist/highlightjs-vue.esm.min.js","webpack://web-ui/./node_modules/highlight.js/es/languages/pgsql.js","webpack://web-ui/./src/views/modeling/dataflow/child/detail/components/dialogs/Run.vue?551f","webpack://web-ui/./src/views/modeling/dataflow/child/detail/components/dialogs/Run.vue","webpack://web-ui/./node_modules/highlight.js/lib/core.js"],"sourcesContent":["import { getTableFields, getTableList } from '@/api/modeling'\nimport { defineStore } from 'pinia'\nimport { Message } from '@arco-design/web-vue'\nimport { KeyValue } from '@/api/modeling/request'\nimport { Graph } from '@antv/x6'\n\ninterface stateType {\n  graph: any,\n  dataFlowInfo: KeyValue,\n  rawData: KeyValue,\n  useData: KeyValue,\n  useDatabase: string,\n  useTable: string[]\n}\nconst defineState: stateType = {\n  graph: null,\n  dataFlowInfo: {},\n  rawData: {},\n  useData: {},\n  useDatabase: ``,\n  useTable: []\n}\n\nexport const useDataFlowStore = defineStore(`dataFlow`, {\n  state () {\n    return JSON.parse(JSON.stringify(defineState))\n  },\n  getters: {\n    getTableSelectList: (state: stateType) => {\n      if (state.useDatabase) {\n        return state.useData[state.useDatabase]\n      } else return []\n    },\n    getFieldsSelectList: (state: stateType) => {\n      if (state.useDatabase && state.useTable.length > 0) {\n        const database = state.useData[state.useDatabase]\n        const tableList: { group: string, fields: KeyValue[] }[] = []\n        state.useTable.forEach((item: string) => {\n          const arr = { group: item, fields: [] }\n          const index = database.findIndex((item2: KeyValue) => item2.tablename === item)\n          if (index !== -1) {\n            arr.fields = database[index].fields\n          }\n          tableList.push(arr)\n        })\n        return tableList\n      } else return []\n    },\n    getFlowDataInfo: (state: stateType) => state.dataFlowInfo,\n    getFieldsByTable: (state: stateType) => (tableName: string | number) => {\n      if (state.useDatabase) {\n        const database = state.useData[state.useDatabase]\n        if (tableName === 0 || tableName === '0') {\n          const index = database.findIndex((item2: KeyValue) => item2.tablename === state.useTable[0])\n          if (index === -1) return []\n          else return database[index].fields\n        } else {\n          const index = database.findIndex((item2: KeyValue) => item2.tablename === tableName)\n          if (index === -1) return []\n          else return database[index].fields\n        }\n      } else return []\n    },\n    getUseTable: (state: stateType) => state.useTable,\n    getUseDatabase: (state: stateType) => state.useDatabase\n  },\n  actions: {\n    setGraph (graph: Graph) {\n      this.$patch((state: stateType) => {\n        state.graph = graph\n      })\n    },\n    initState () {\n      return new Promise((resolve) => {\n        this.$patch((state: stateType) => {\n          state.useData = []\n          state.useDatabase = ``\n          state.useTable = []\n          state.rawData = []\n          state.dataFlowInfo = []\n          resolve(true)\n        })\n      })\n    },\n    clearUse () {\n      return new Promise((resolve) => {\n        this.$patch((state: stateType) => {\n          state.useDatabase = ``\n          state.useTable = []\n          resolve(true)\n        })\n      })\n    },\n    setFlowDataInfo (info: KeyValue) {\n      this.$patch((state: stateType) => state.dataFlowInfo = info)\n    },\n    setDatabaseInfo ( dbName: string, clusterNodeId: string, schema: string) {\n      return new Promise((resolve, reject) => {\n        this.$patch((state: stateType) => {\n          state.useDatabase = `${dbName}|,|${clusterNodeId}|,|${schema}`\n          state.useTable = []\n          if (!Object.keys(state.rawData).includes(`${dbName}|,|${clusterNodeId}|,|${schema}`)) {\n            getTableList(dbName, clusterNodeId, schema).then((res: KeyValue) => {\n              if (Number(res.code) === 200) {\n                const arr = res.data.map((item: KeyValue) => ({ ...item, tables: {}}))\n                state.rawData[`${dbName}|,|${clusterNodeId}|,|${schema}`] = arr\n                state.useData[`${dbName}|,|${clusterNodeId}|,|${schema}`] = arr\n                resolve(true)\n              } else {\n                Message.error(`database not found`)\n                reject(true)\n              }\n            }).catch(() => {\n              Message.error(`database not found`)\n              reject(true)\n            })\n          } else {\n            resolve(true)\n          }\n        })\n      })\n    },\n    setDatabaseTableInfo (tableName: string, params?: KeyValue) {\n      return new Promise(resolve => {\n        this.$patch((state: stateType) => {\n          if (tableName) {\n            if (params && (params.tableKey || params.tableKey === 0)) state.useTable[params.tableKey] = tableName\n            else {\n              if (!(params && params.noUse)) state.useTable.push(tableName)\n            }\n\n            const index = state.rawData[state.useDatabase].findIndex((item: KeyValue) => item.tablename === tableName)\n            if (!Object.keys(state.rawData[state.useDatabase][index].tables).includes(tableName)) {\n              getTableFields(`${state.useDatabase.split('|,|').join('/')}/${tableName}`).then((res: KeyValue) => {\n                resolve(true)\n                state.rawData[state.useDatabase][index].fields = res.data\n                state.useData[state.useDatabase][index].fields = res.data\n              })\n            } else resolve(false)\n          } else resolve(false)\n        })\n      })\n    },\n    removeDatabaseTable (tableName: string) {\n      return new Promise(resolve => {\n        this.$patch((state: stateType) => {\n          const index = state.useTable.indexOf(tableName)\n          if (index !== -1) {\n            state.useTable.splice(index, 1)\n            resolve(true)\n          } else resolve(false)\n        })\n      })\n    }\n  }\n})\n","// https://nodejs.org/api/packages.html#packages_writing_dual_packages_while_avoiding_or_minimizing_hazards\nimport HighlightJS from '../lib/core.js';\nexport { HighlightJS };\nexport default HighlightJS;\n","import{defineComponent as e,ref as l,watch as a,computed as t,h as n}from\"vue\";import u from\"highlight.js/lib/core\";var r=e({props:{code:{type:String,required:!0},language:{type:String,default:\"\"},autodetect:{type:Boolean,default:!0},ignoreIllegals:{type:Boolean,default:!0}},setup:function(e){var n=l(e.language);a((function(){return e.language}),(function(e){n.value=e}));var r=t((function(){return e.autodetect||!n.value})),o=t((function(){return!r.value&&!u.getLanguage(n.value)}));return{className:t((function(){return o.value?\"\":\"hljs \"+n.value})),highlightedCode:t((function(){var l;if(o.value)return console.warn('The language \"'+n.value+'\" you specified could not be found.'),e.code.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\");if(r.value){var a=u.highlightAuto(e.code);return n.value=null!==(l=a.language)&&void 0!==l?l:\"\",a.value}return(a=u.highlight(e.code,{language:n.value,ignoreIllegals:e.ignoreIllegals})).value}))}},render:function(){return n(\"pre\",{},[n(\"code\",{class:this.className,innerHTML:this.highlightedCode})])}}),o={install:function(e){e.component(\"highlightjs\",r)},component:r};export default o;\n","/*\nLanguage: PostgreSQL and PL/pgSQL\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\nWebsite: https://www.postgresql.org/docs/11/sql.html\nDescription:\n    This language incorporates both PostgreSQL SQL dialect and PL/pgSQL language.\n    It is based on PostgreSQL version 11. Some notes:\n    - Text in double-dollar-strings is _always_ interpreted as some programming code. Text\n      in ordinary quotes is _never_ interpreted that way and highlighted just as a string.\n    - There are quite a bit \"special cases\". That's because many keywords are not strictly\n      they are keywords in some contexts and ordinary identifiers in others. Only some\n      of such cases are handled; you still can get some of your identifiers highlighted\n      wrong way.\n    - Function names deliberately are not highlighted. There is no way to tell function\n      call from other constructs, hence we can't highlight _all_ function names. And\n      some names highlighted while others not looks ugly.\n*/\n\nfunction pgsql(hljs) {\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const UNQUOTED_IDENT = '[a-zA-Z_][a-zA-Z_0-9$]*';\n  const DOLLAR_STRING = '\\\\$([a-zA-Z_]?|[a-zA-Z_][a-zA-Z_0-9]*)\\\\$';\n  const LABEL = '<<\\\\s*' + UNQUOTED_IDENT + '\\\\s*>>';\n\n  const SQL_KW =\n    // https://www.postgresql.org/docs/11/static/sql-keywords-appendix.html\n    // https://www.postgresql.org/docs/11/static/sql-commands.html\n    // SQL commands (starting words)\n    'ABORT ALTER ANALYZE BEGIN CALL CHECKPOINT|10 CLOSE CLUSTER COMMENT COMMIT COPY CREATE DEALLOCATE DECLARE '\n    + 'DELETE DISCARD DO DROP END EXECUTE EXPLAIN FETCH GRANT IMPORT INSERT LISTEN LOAD LOCK MOVE NOTIFY '\n    + 'PREPARE REASSIGN|10 REFRESH REINDEX RELEASE RESET REVOKE ROLLBACK SAVEPOINT SECURITY SELECT SET SHOW '\n    + 'START TRUNCATE UNLISTEN|10 UPDATE VACUUM|10 VALUES '\n    // SQL commands (others)\n    + 'AGGREGATE COLLATION CONVERSION|10 DATABASE DEFAULT PRIVILEGES DOMAIN TRIGGER EXTENSION FOREIGN '\n    + 'WRAPPER|10 TABLE FUNCTION GROUP LANGUAGE LARGE OBJECT MATERIALIZED VIEW OPERATOR CLASS '\n    + 'FAMILY POLICY PUBLICATION|10 ROLE RULE SCHEMA SEQUENCE SERVER STATISTICS SUBSCRIPTION SYSTEM '\n    + 'TABLESPACE CONFIGURATION DICTIONARY PARSER TEMPLATE TYPE USER MAPPING PREPARED ACCESS '\n    + 'METHOD CAST AS TRANSFORM TRANSACTION OWNED TO INTO SESSION AUTHORIZATION '\n    + 'INDEX PROCEDURE ASSERTION '\n    // additional reserved key words\n    + 'ALL ANALYSE AND ANY ARRAY ASC ASYMMETRIC|10 BOTH CASE CHECK '\n    + 'COLLATE COLUMN CONCURRENTLY|10 CONSTRAINT CROSS '\n    + 'DEFERRABLE RANGE '\n    + 'DESC DISTINCT ELSE EXCEPT FOR FREEZE|10 FROM FULL HAVING '\n    + 'ILIKE IN INITIALLY INNER INTERSECT IS ISNULL JOIN LATERAL LEADING LIKE LIMIT '\n    + 'NATURAL NOT NOTNULL NULL OFFSET ON ONLY OR ORDER OUTER OVERLAPS PLACING PRIMARY '\n    + 'REFERENCES RETURNING SIMILAR SOME SYMMETRIC TABLESAMPLE THEN '\n    + 'TRAILING UNION UNIQUE USING VARIADIC|10 VERBOSE WHEN WHERE WINDOW WITH '\n    // some of non-reserved (which are used in clauses or as PL/pgSQL keyword)\n    + 'BY RETURNS INOUT OUT SETOF|10 IF STRICT CURRENT CONTINUE OWNER LOCATION OVER PARTITION WITHIN '\n    + 'BETWEEN ESCAPE EXTERNAL INVOKER DEFINER WORK RENAME VERSION CONNECTION CONNECT '\n    + 'TABLES TEMP TEMPORARY FUNCTIONS SEQUENCES TYPES SCHEMAS OPTION CASCADE RESTRICT ADD ADMIN '\n    + 'EXISTS VALID VALIDATE ENABLE DISABLE REPLICA|10 ALWAYS PASSING COLUMNS PATH '\n    + 'REF VALUE OVERRIDING IMMUTABLE STABLE VOLATILE BEFORE AFTER EACH ROW PROCEDURAL '\n    + 'ROUTINE NO HANDLER VALIDATOR OPTIONS STORAGE OIDS|10 WITHOUT INHERIT DEPENDS CALLED '\n    + 'INPUT LEAKPROOF|10 COST ROWS NOWAIT SEARCH UNTIL ENCRYPTED|10 PASSWORD CONFLICT|10 '\n    + 'INSTEAD INHERITS CHARACTERISTICS WRITE CURSOR ALSO STATEMENT SHARE EXCLUSIVE INLINE '\n    + 'ISOLATION REPEATABLE READ COMMITTED SERIALIZABLE UNCOMMITTED LOCAL GLOBAL SQL PROCEDURES '\n    + 'RECURSIVE SNAPSHOT ROLLUP CUBE TRUSTED|10 INCLUDE FOLLOWING PRECEDING UNBOUNDED RANGE GROUPS '\n    + 'UNENCRYPTED|10 SYSID FORMAT DELIMITER HEADER QUOTE ENCODING FILTER OFF '\n    // some parameters of VACUUM/ANALYZE/EXPLAIN\n    + 'FORCE_QUOTE FORCE_NOT_NULL FORCE_NULL COSTS BUFFERS TIMING SUMMARY DISABLE_PAGE_SKIPPING '\n    //\n    + 'RESTART CYCLE GENERATED IDENTITY DEFERRED IMMEDIATE LEVEL LOGGED UNLOGGED '\n    + 'OF NOTHING NONE EXCLUDE ATTRIBUTE '\n    // from GRANT (not keywords actually)\n    + 'USAGE ROUTINES '\n    // actually literals, but look better this way (due to IS TRUE, IS FALSE, ISNULL etc)\n    + 'TRUE FALSE NAN INFINITY ';\n\n  const ROLE_ATTRS = // only those not in keywrods already\n    'SUPERUSER NOSUPERUSER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE INHERIT NOINHERIT '\n    + 'LOGIN NOLOGIN REPLICATION NOREPLICATION BYPASSRLS NOBYPASSRLS ';\n\n  const PLPGSQL_KW =\n    'ALIAS BEGIN CONSTANT DECLARE END EXCEPTION RETURN PERFORM|10 RAISE GET DIAGNOSTICS '\n    + 'STACKED|10 FOREACH LOOP ELSIF EXIT WHILE REVERSE SLICE DEBUG LOG INFO NOTICE WARNING ASSERT '\n    + 'OPEN ';\n\n  const TYPES =\n    // https://www.postgresql.org/docs/11/static/datatype.html\n    'BIGINT INT8 BIGSERIAL SERIAL8 BIT VARYING VARBIT BOOLEAN BOOL BOX BYTEA CHARACTER CHAR VARCHAR '\n    + 'CIDR CIRCLE DATE DOUBLE PRECISION FLOAT8 FLOAT INET INTEGER INT INT4 INTERVAL JSON JSONB LINE LSEG|10 '\n    + 'MACADDR MACADDR8 MONEY NUMERIC DEC DECIMAL PATH POINT POLYGON REAL FLOAT4 SMALLINT INT2 '\n    + 'SMALLSERIAL|10 SERIAL2|10 SERIAL|10 SERIAL4|10 TEXT TIME ZONE TIMETZ|10 TIMESTAMP TIMESTAMPTZ|10 TSQUERY|10 TSVECTOR|10 '\n    + 'TXID_SNAPSHOT|10 UUID XML NATIONAL NCHAR '\n    + 'INT4RANGE|10 INT8RANGE|10 NUMRANGE|10 TSRANGE|10 TSTZRANGE|10 DATERANGE|10 '\n    // pseudotypes\n    + 'ANYELEMENT ANYARRAY ANYNONARRAY ANYENUM ANYRANGE CSTRING INTERNAL '\n    + 'RECORD PG_DDL_COMMAND VOID UNKNOWN OPAQUE REFCURSOR '\n    // spec. type\n    + 'NAME '\n    // OID-types\n    + 'OID REGPROC|10 REGPROCEDURE|10 REGOPER|10 REGOPERATOR|10 REGCLASS|10 REGTYPE|10 REGROLE|10 '\n    + 'REGNAMESPACE|10 REGCONFIG|10 REGDICTIONARY|10 ';// +\n\n  const TYPES_RE =\n    TYPES.trim()\n      .split(' ')\n      .map(function(val) { return val.split('|')[0]; })\n      .join('|');\n\n  const SQL_BI =\n    'CURRENT_TIME CURRENT_TIMESTAMP CURRENT_USER CURRENT_CATALOG|10 CURRENT_DATE LOCALTIME LOCALTIMESTAMP '\n    + 'CURRENT_ROLE|10 CURRENT_SCHEMA|10 SESSION_USER PUBLIC ';\n\n  const PLPGSQL_BI =\n    'FOUND NEW OLD TG_NAME|10 TG_WHEN|10 TG_LEVEL|10 TG_OP|10 TG_RELID|10 TG_RELNAME|10 '\n    + 'TG_TABLE_NAME|10 TG_TABLE_SCHEMA|10 TG_NARGS|10 TG_ARGV|10 TG_EVENT|10 TG_TAG|10 '\n    // get diagnostics\n    + 'ROW_COUNT RESULT_OID|10 PG_CONTEXT|10 RETURNED_SQLSTATE COLUMN_NAME CONSTRAINT_NAME '\n    + 'PG_DATATYPE_NAME|10 MESSAGE_TEXT TABLE_NAME SCHEMA_NAME PG_EXCEPTION_DETAIL|10 '\n    + 'PG_EXCEPTION_HINT|10 PG_EXCEPTION_CONTEXT|10 ';\n\n  const PLPGSQL_EXCEPTIONS =\n    // exceptions https://www.postgresql.org/docs/current/static/errcodes-appendix.html\n    'SQLSTATE SQLERRM|10 '\n    + 'SUCCESSFUL_COMPLETION WARNING DYNAMIC_RESULT_SETS_RETURNED IMPLICIT_ZERO_BIT_PADDING '\n    + 'NULL_VALUE_ELIMINATED_IN_SET_FUNCTION PRIVILEGE_NOT_GRANTED PRIVILEGE_NOT_REVOKED '\n    + 'STRING_DATA_RIGHT_TRUNCATION DEPRECATED_FEATURE NO_DATA NO_ADDITIONAL_DYNAMIC_RESULT_SETS_RETURNED '\n    + 'SQL_STATEMENT_NOT_YET_COMPLETE CONNECTION_EXCEPTION CONNECTION_DOES_NOT_EXIST CONNECTION_FAILURE '\n    + 'SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION '\n    + 'TRANSACTION_RESOLUTION_UNKNOWN PROTOCOL_VIOLATION TRIGGERED_ACTION_EXCEPTION FEATURE_NOT_SUPPORTED '\n    + 'INVALID_TRANSACTION_INITIATION LOCATOR_EXCEPTION INVALID_LOCATOR_SPECIFICATION INVALID_GRANTOR '\n    + 'INVALID_GRANT_OPERATION INVALID_ROLE_SPECIFICATION DIAGNOSTICS_EXCEPTION '\n    + 'STACKED_DIAGNOSTICS_ACCESSED_WITHOUT_ACTIVE_HANDLER CASE_NOT_FOUND CARDINALITY_VIOLATION '\n    + 'DATA_EXCEPTION ARRAY_SUBSCRIPT_ERROR CHARACTER_NOT_IN_REPERTOIRE DATETIME_FIELD_OVERFLOW '\n    + 'DIVISION_BY_ZERO ERROR_IN_ASSIGNMENT ESCAPE_CHARACTER_CONFLICT INDICATOR_OVERFLOW '\n    + 'INTERVAL_FIELD_OVERFLOW INVALID_ARGUMENT_FOR_LOGARITHM INVALID_ARGUMENT_FOR_NTILE_FUNCTION '\n    + 'INVALID_ARGUMENT_FOR_NTH_VALUE_FUNCTION INVALID_ARGUMENT_FOR_POWER_FUNCTION '\n    + 'INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION INVALID_CHARACTER_VALUE_FOR_CAST '\n    + 'INVALID_DATETIME_FORMAT INVALID_ESCAPE_CHARACTER INVALID_ESCAPE_OCTET INVALID_ESCAPE_SEQUENCE '\n    + 'NONSTANDARD_USE_OF_ESCAPE_CHARACTER INVALID_INDICATOR_PARAMETER_VALUE INVALID_PARAMETER_VALUE '\n    + 'INVALID_REGULAR_EXPRESSION INVALID_ROW_COUNT_IN_LIMIT_CLAUSE '\n    + 'INVALID_ROW_COUNT_IN_RESULT_OFFSET_CLAUSE INVALID_TABLESAMPLE_ARGUMENT INVALID_TABLESAMPLE_REPEAT '\n    + 'INVALID_TIME_ZONE_DISPLACEMENT_VALUE INVALID_USE_OF_ESCAPE_CHARACTER MOST_SPECIFIC_TYPE_MISMATCH '\n    + 'NULL_VALUE_NOT_ALLOWED NULL_VALUE_NO_INDICATOR_PARAMETER NUMERIC_VALUE_OUT_OF_RANGE '\n    + 'SEQUENCE_GENERATOR_LIMIT_EXCEEDED STRING_DATA_LENGTH_MISMATCH STRING_DATA_RIGHT_TRUNCATION '\n    + 'SUBSTRING_ERROR TRIM_ERROR UNTERMINATED_C_STRING ZERO_LENGTH_CHARACTER_STRING '\n    + 'FLOATING_POINT_EXCEPTION INVALID_TEXT_REPRESENTATION INVALID_BINARY_REPRESENTATION '\n    + 'BAD_COPY_FILE_FORMAT UNTRANSLATABLE_CHARACTER NOT_AN_XML_DOCUMENT INVALID_XML_DOCUMENT '\n    + 'INVALID_XML_CONTENT INVALID_XML_COMMENT INVALID_XML_PROCESSING_INSTRUCTION '\n    + 'INTEGRITY_CONSTRAINT_VIOLATION RESTRICT_VIOLATION NOT_NULL_VIOLATION FOREIGN_KEY_VIOLATION '\n    + 'UNIQUE_VIOLATION CHECK_VIOLATION EXCLUSION_VIOLATION INVALID_CURSOR_STATE '\n    + 'INVALID_TRANSACTION_STATE ACTIVE_SQL_TRANSACTION BRANCH_TRANSACTION_ALREADY_ACTIVE '\n    + 'HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION '\n    + 'INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION '\n    + 'NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION READ_ONLY_SQL_TRANSACTION '\n    + 'SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED NO_ACTIVE_SQL_TRANSACTION '\n    + 'IN_FAILED_SQL_TRANSACTION IDLE_IN_TRANSACTION_SESSION_TIMEOUT INVALID_SQL_STATEMENT_NAME '\n    + 'TRIGGERED_DATA_CHANGE_VIOLATION INVALID_AUTHORIZATION_SPECIFICATION INVALID_PASSWORD '\n    + 'DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST DEPENDENT_OBJECTS_STILL_EXIST '\n    + 'INVALID_TRANSACTION_TERMINATION SQL_ROUTINE_EXCEPTION FUNCTION_EXECUTED_NO_RETURN_STATEMENT '\n    + 'MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED '\n    + 'READING_SQL_DATA_NOT_PERMITTED INVALID_CURSOR_NAME EXTERNAL_ROUTINE_EXCEPTION '\n    + 'CONTAINING_SQL_NOT_PERMITTED MODIFYING_SQL_DATA_NOT_PERMITTED '\n    + 'PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED '\n    + 'EXTERNAL_ROUTINE_INVOCATION_EXCEPTION INVALID_SQLSTATE_RETURNED NULL_VALUE_NOT_ALLOWED '\n    + 'TRIGGER_PROTOCOL_VIOLATED SRF_PROTOCOL_VIOLATED EVENT_TRIGGER_PROTOCOL_VIOLATED '\n    + 'SAVEPOINT_EXCEPTION INVALID_SAVEPOINT_SPECIFICATION INVALID_CATALOG_NAME '\n    + 'INVALID_SCHEMA_NAME TRANSACTION_ROLLBACK TRANSACTION_INTEGRITY_CONSTRAINT_VIOLATION '\n    + 'SERIALIZATION_FAILURE STATEMENT_COMPLETION_UNKNOWN DEADLOCK_DETECTED '\n    + 'SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION SYNTAX_ERROR INSUFFICIENT_PRIVILEGE CANNOT_COERCE '\n    + 'GROUPING_ERROR WINDOWING_ERROR INVALID_RECURSION INVALID_FOREIGN_KEY INVALID_NAME '\n    + 'NAME_TOO_LONG RESERVED_NAME DATATYPE_MISMATCH INDETERMINATE_DATATYPE COLLATION_MISMATCH '\n    + 'INDETERMINATE_COLLATION WRONG_OBJECT_TYPE GENERATED_ALWAYS UNDEFINED_COLUMN '\n    + 'UNDEFINED_FUNCTION UNDEFINED_TABLE UNDEFINED_PARAMETER UNDEFINED_OBJECT '\n    + 'DUPLICATE_COLUMN DUPLICATE_CURSOR DUPLICATE_DATABASE DUPLICATE_FUNCTION '\n    + 'DUPLICATE_PREPARED_STATEMENT DUPLICATE_SCHEMA DUPLICATE_TABLE DUPLICATE_ALIAS '\n    + 'DUPLICATE_OBJECT AMBIGUOUS_COLUMN AMBIGUOUS_FUNCTION AMBIGUOUS_PARAMETER AMBIGUOUS_ALIAS '\n    + 'INVALID_COLUMN_REFERENCE INVALID_COLUMN_DEFINITION INVALID_CURSOR_DEFINITION '\n    + 'INVALID_DATABASE_DEFINITION INVALID_FUNCTION_DEFINITION '\n    + 'INVALID_PREPARED_STATEMENT_DEFINITION INVALID_SCHEMA_DEFINITION INVALID_TABLE_DEFINITION '\n    + 'INVALID_OBJECT_DEFINITION WITH_CHECK_OPTION_VIOLATION INSUFFICIENT_RESOURCES DISK_FULL '\n    + 'OUT_OF_MEMORY TOO_MANY_CONNECTIONS CONFIGURATION_LIMIT_EXCEEDED PROGRAM_LIMIT_EXCEEDED '\n    + 'STATEMENT_TOO_COMPLEX TOO_MANY_COLUMNS TOO_MANY_ARGUMENTS OBJECT_NOT_IN_PREREQUISITE_STATE '\n    + 'OBJECT_IN_USE CANT_CHANGE_RUNTIME_PARAM LOCK_NOT_AVAILABLE OPERATOR_INTERVENTION '\n    + 'QUERY_CANCELED ADMIN_SHUTDOWN CRASH_SHUTDOWN CANNOT_CONNECT_NOW DATABASE_DROPPED '\n    + 'SYSTEM_ERROR IO_ERROR UNDEFINED_FILE DUPLICATE_FILE SNAPSHOT_TOO_OLD CONFIG_FILE_ERROR '\n    + 'LOCK_FILE_EXISTS FDW_ERROR FDW_COLUMN_NAME_NOT_FOUND FDW_DYNAMIC_PARAMETER_VALUE_NEEDED '\n    + 'FDW_FUNCTION_SEQUENCE_ERROR FDW_INCONSISTENT_DESCRIPTOR_INFORMATION '\n    + 'FDW_INVALID_ATTRIBUTE_VALUE FDW_INVALID_COLUMN_NAME FDW_INVALID_COLUMN_NUMBER '\n    + 'FDW_INVALID_DATA_TYPE FDW_INVALID_DATA_TYPE_DESCRIPTORS '\n    + 'FDW_INVALID_DESCRIPTOR_FIELD_IDENTIFIER FDW_INVALID_HANDLE FDW_INVALID_OPTION_INDEX '\n    + 'FDW_INVALID_OPTION_NAME FDW_INVALID_STRING_LENGTH_OR_BUFFER_LENGTH '\n    + 'FDW_INVALID_STRING_FORMAT FDW_INVALID_USE_OF_NULL_POINTER FDW_TOO_MANY_HANDLES '\n    + 'FDW_OUT_OF_MEMORY FDW_NO_SCHEMAS FDW_OPTION_NAME_NOT_FOUND FDW_REPLY_HANDLE '\n    + 'FDW_SCHEMA_NOT_FOUND FDW_TABLE_NOT_FOUND FDW_UNABLE_TO_CREATE_EXECUTION '\n    + 'FDW_UNABLE_TO_CREATE_REPLY FDW_UNABLE_TO_ESTABLISH_CONNECTION PLPGSQL_ERROR '\n    + 'RAISE_EXCEPTION NO_DATA_FOUND TOO_MANY_ROWS ASSERT_FAILURE INTERNAL_ERROR DATA_CORRUPTED '\n    + 'INDEX_CORRUPTED ';\n\n  const FUNCTIONS =\n    // https://www.postgresql.org/docs/11/static/functions-aggregate.html\n    'ARRAY_AGG AVG BIT_AND BIT_OR BOOL_AND BOOL_OR COUNT EVERY JSON_AGG JSONB_AGG JSON_OBJECT_AGG '\n    + 'JSONB_OBJECT_AGG MAX MIN MODE STRING_AGG SUM XMLAGG '\n    + 'CORR COVAR_POP COVAR_SAMP REGR_AVGX REGR_AVGY REGR_COUNT REGR_INTERCEPT REGR_R2 REGR_SLOPE '\n    + 'REGR_SXX REGR_SXY REGR_SYY STDDEV STDDEV_POP STDDEV_SAMP VARIANCE VAR_POP VAR_SAMP '\n    + 'PERCENTILE_CONT PERCENTILE_DISC '\n    // https://www.postgresql.org/docs/11/static/functions-window.html\n    + 'ROW_NUMBER RANK DENSE_RANK PERCENT_RANK CUME_DIST NTILE LAG LEAD FIRST_VALUE LAST_VALUE NTH_VALUE '\n    // https://www.postgresql.org/docs/11/static/functions-comparison.html\n    + 'NUM_NONNULLS NUM_NULLS '\n    // https://www.postgresql.org/docs/11/static/functions-math.html\n    + 'ABS CBRT CEIL CEILING DEGREES DIV EXP FLOOR LN LOG MOD PI POWER RADIANS ROUND SCALE SIGN SQRT '\n    + 'TRUNC WIDTH_BUCKET '\n    + 'RANDOM SETSEED '\n    + 'ACOS ACOSD ASIN ASIND ATAN ATAND ATAN2 ATAN2D COS COSD COT COTD SIN SIND TAN TAND '\n    // https://www.postgresql.org/docs/11/static/functions-string.html\n    + 'BIT_LENGTH CHAR_LENGTH CHARACTER_LENGTH LOWER OCTET_LENGTH OVERLAY POSITION SUBSTRING TREAT TRIM UPPER '\n    + 'ASCII BTRIM CHR CONCAT CONCAT_WS CONVERT CONVERT_FROM CONVERT_TO DECODE ENCODE INITCAP '\n    + 'LEFT LENGTH LPAD LTRIM MD5 PARSE_IDENT PG_CLIENT_ENCODING QUOTE_IDENT|10 QUOTE_LITERAL|10 '\n    + 'QUOTE_NULLABLE|10 REGEXP_MATCH REGEXP_MATCHES REGEXP_REPLACE REGEXP_SPLIT_TO_ARRAY '\n    + 'REGEXP_SPLIT_TO_TABLE REPEAT REPLACE REVERSE RIGHT RPAD RTRIM SPLIT_PART STRPOS SUBSTR '\n    + 'TO_ASCII TO_HEX TRANSLATE '\n    // https://www.postgresql.org/docs/11/static/functions-binarystring.html\n    + 'OCTET_LENGTH GET_BIT GET_BYTE SET_BIT SET_BYTE '\n    // https://www.postgresql.org/docs/11/static/functions-formatting.html\n    + 'TO_CHAR TO_DATE TO_NUMBER TO_TIMESTAMP '\n    // https://www.postgresql.org/docs/11/static/functions-datetime.html\n    + 'AGE CLOCK_TIMESTAMP|10 DATE_PART DATE_TRUNC ISFINITE JUSTIFY_DAYS JUSTIFY_HOURS JUSTIFY_INTERVAL '\n    + 'MAKE_DATE MAKE_INTERVAL|10 MAKE_TIME MAKE_TIMESTAMP|10 MAKE_TIMESTAMPTZ|10 NOW STATEMENT_TIMESTAMP|10 '\n    + 'TIMEOFDAY TRANSACTION_TIMESTAMP|10 '\n    // https://www.postgresql.org/docs/11/static/functions-enum.html\n    + 'ENUM_FIRST ENUM_LAST ENUM_RANGE '\n    // https://www.postgresql.org/docs/11/static/functions-geometry.html\n    + 'AREA CENTER DIAMETER HEIGHT ISCLOSED ISOPEN NPOINTS PCLOSE POPEN RADIUS WIDTH '\n    + 'BOX BOUND_BOX CIRCLE LINE LSEG PATH POLYGON '\n    // https://www.postgresql.org/docs/11/static/functions-net.html\n    + 'ABBREV BROADCAST HOST HOSTMASK MASKLEN NETMASK NETWORK SET_MASKLEN TEXT INET_SAME_FAMILY '\n    + 'INET_MERGE MACADDR8_SET7BIT '\n    // https://www.postgresql.org/docs/11/static/functions-textsearch.html\n    + 'ARRAY_TO_TSVECTOR GET_CURRENT_TS_CONFIG NUMNODE PLAINTO_TSQUERY PHRASETO_TSQUERY WEBSEARCH_TO_TSQUERY '\n    + 'QUERYTREE SETWEIGHT STRIP TO_TSQUERY TO_TSVECTOR JSON_TO_TSVECTOR JSONB_TO_TSVECTOR TS_DELETE '\n    + 'TS_FILTER TS_HEADLINE TS_RANK TS_RANK_CD TS_REWRITE TSQUERY_PHRASE TSVECTOR_TO_ARRAY '\n    + 'TSVECTOR_UPDATE_TRIGGER TSVECTOR_UPDATE_TRIGGER_COLUMN '\n    // https://www.postgresql.org/docs/11/static/functions-xml.html\n    + 'XMLCOMMENT XMLCONCAT XMLELEMENT XMLFOREST XMLPI XMLROOT '\n    + 'XMLEXISTS XML_IS_WELL_FORMED XML_IS_WELL_FORMED_DOCUMENT XML_IS_WELL_FORMED_CONTENT '\n    + 'XPATH XPATH_EXISTS XMLTABLE XMLNAMESPACES '\n    + 'TABLE_TO_XML TABLE_TO_XMLSCHEMA TABLE_TO_XML_AND_XMLSCHEMA '\n    + 'QUERY_TO_XML QUERY_TO_XMLSCHEMA QUERY_TO_XML_AND_XMLSCHEMA '\n    + 'CURSOR_TO_XML CURSOR_TO_XMLSCHEMA '\n    + 'SCHEMA_TO_XML SCHEMA_TO_XMLSCHEMA SCHEMA_TO_XML_AND_XMLSCHEMA '\n    + 'DATABASE_TO_XML DATABASE_TO_XMLSCHEMA DATABASE_TO_XML_AND_XMLSCHEMA '\n    + 'XMLATTRIBUTES '\n    // https://www.postgresql.org/docs/11/static/functions-json.html\n    + 'TO_JSON TO_JSONB ARRAY_TO_JSON ROW_TO_JSON JSON_BUILD_ARRAY JSONB_BUILD_ARRAY JSON_BUILD_OBJECT '\n    + 'JSONB_BUILD_OBJECT JSON_OBJECT JSONB_OBJECT JSON_ARRAY_LENGTH JSONB_ARRAY_LENGTH JSON_EACH '\n    + 'JSONB_EACH JSON_EACH_TEXT JSONB_EACH_TEXT JSON_EXTRACT_PATH JSONB_EXTRACT_PATH '\n    + 'JSON_OBJECT_KEYS JSONB_OBJECT_KEYS JSON_POPULATE_RECORD JSONB_POPULATE_RECORD JSON_POPULATE_RECORDSET '\n    + 'JSONB_POPULATE_RECORDSET JSON_ARRAY_ELEMENTS JSONB_ARRAY_ELEMENTS JSON_ARRAY_ELEMENTS_TEXT '\n    + 'JSONB_ARRAY_ELEMENTS_TEXT JSON_TYPEOF JSONB_TYPEOF JSON_TO_RECORD JSONB_TO_RECORD JSON_TO_RECORDSET '\n    + 'JSONB_TO_RECORDSET JSON_STRIP_NULLS JSONB_STRIP_NULLS JSONB_SET JSONB_INSERT JSONB_PRETTY '\n    // https://www.postgresql.org/docs/11/static/functions-sequence.html\n    + 'CURRVAL LASTVAL NEXTVAL SETVAL '\n    // https://www.postgresql.org/docs/11/static/functions-conditional.html\n    + 'COALESCE NULLIF GREATEST LEAST '\n    // https://www.postgresql.org/docs/11/static/functions-array.html\n    + 'ARRAY_APPEND ARRAY_CAT ARRAY_NDIMS ARRAY_DIMS ARRAY_FILL ARRAY_LENGTH ARRAY_LOWER ARRAY_POSITION '\n    + 'ARRAY_POSITIONS ARRAY_PREPEND ARRAY_REMOVE ARRAY_REPLACE ARRAY_TO_STRING ARRAY_UPPER CARDINALITY '\n    + 'STRING_TO_ARRAY UNNEST '\n    // https://www.postgresql.org/docs/11/static/functions-range.html\n    + 'ISEMPTY LOWER_INC UPPER_INC LOWER_INF UPPER_INF RANGE_MERGE '\n    // https://www.postgresql.org/docs/11/static/functions-srf.html\n    + 'GENERATE_SERIES GENERATE_SUBSCRIPTS '\n    // https://www.postgresql.org/docs/11/static/functions-info.html\n    + 'CURRENT_DATABASE CURRENT_QUERY CURRENT_SCHEMA|10 CURRENT_SCHEMAS|10 INET_CLIENT_ADDR INET_CLIENT_PORT '\n    + 'INET_SERVER_ADDR INET_SERVER_PORT ROW_SECURITY_ACTIVE FORMAT_TYPE '\n    + 'TO_REGCLASS TO_REGPROC TO_REGPROCEDURE TO_REGOPER TO_REGOPERATOR TO_REGTYPE TO_REGNAMESPACE TO_REGROLE '\n    + 'COL_DESCRIPTION OBJ_DESCRIPTION SHOBJ_DESCRIPTION '\n    + 'TXID_CURRENT TXID_CURRENT_IF_ASSIGNED TXID_CURRENT_SNAPSHOT TXID_SNAPSHOT_XIP TXID_SNAPSHOT_XMAX '\n    + 'TXID_SNAPSHOT_XMIN TXID_VISIBLE_IN_SNAPSHOT TXID_STATUS '\n    // https://www.postgresql.org/docs/11/static/functions-admin.html\n    + 'CURRENT_SETTING SET_CONFIG BRIN_SUMMARIZE_NEW_VALUES BRIN_SUMMARIZE_RANGE BRIN_DESUMMARIZE_RANGE '\n    + 'GIN_CLEAN_PENDING_LIST '\n    // https://www.postgresql.org/docs/11/static/functions-trigger.html\n    + 'SUPPRESS_REDUNDANT_UPDATES_TRIGGER '\n    // ihttps://www.postgresql.org/docs/devel/static/lo-funcs.html\n    + 'LO_FROM_BYTEA LO_PUT LO_GET LO_CREAT LO_CREATE LO_UNLINK LO_IMPORT LO_EXPORT LOREAD LOWRITE '\n    //\n    + 'GROUPING CAST ';\n\n  const FUNCTIONS_RE =\n      FUNCTIONS.trim()\n        .split(' ')\n        .map(function(val) { return val.split('|')[0]; })\n        .join('|');\n\n  return {\n    name: 'PostgreSQL',\n    aliases: [\n      'postgres',\n      'postgresql'\n    ],\n    supersetOf: \"sql\",\n    case_insensitive: true,\n    keywords: {\n      keyword:\n            SQL_KW + PLPGSQL_KW + ROLE_ATTRS,\n      built_in:\n            SQL_BI + PLPGSQL_BI + PLPGSQL_EXCEPTIONS\n    },\n    // Forbid some cunstructs from other languages to improve autodetect. In fact\n    // \"[a-z]:\" is legal (as part of array slice), but improbabal.\n    illegal: /:==|\\W\\s*\\(\\*|(^|\\s)\\$[a-z]|\\{\\{|[a-z]:\\s*$|\\.\\.\\.|TO:|DO:/,\n    contains: [\n      // special handling of some words, which are reserved only in some contexts\n      {\n        className: 'keyword',\n        variants: [\n          { begin: /\\bTEXT\\s*SEARCH\\b/ },\n          { begin: /\\b(PRIMARY|FOREIGN|FOR(\\s+NO)?)\\s+KEY\\b/ },\n          { begin: /\\bPARALLEL\\s+(UNSAFE|RESTRICTED|SAFE)\\b/ },\n          { begin: /\\bSTORAGE\\s+(PLAIN|EXTERNAL|EXTENDED|MAIN)\\b/ },\n          { begin: /\\bMATCH\\s+(FULL|PARTIAL|SIMPLE)\\b/ },\n          { begin: /\\bNULLS\\s+(FIRST|LAST)\\b/ },\n          { begin: /\\bEVENT\\s+TRIGGER\\b/ },\n          { begin: /\\b(MAPPING|OR)\\s+REPLACE\\b/ },\n          { begin: /\\b(FROM|TO)\\s+(PROGRAM|STDIN|STDOUT)\\b/ },\n          { begin: /\\b(SHARE|EXCLUSIVE)\\s+MODE\\b/ },\n          { begin: /\\b(LEFT|RIGHT)\\s+(OUTER\\s+)?JOIN\\b/ },\n          { begin: /\\b(FETCH|MOVE)\\s+(NEXT|PRIOR|FIRST|LAST|ABSOLUTE|RELATIVE|FORWARD|BACKWARD)\\b/ },\n          { begin: /\\bPRESERVE\\s+ROWS\\b/ },\n          { begin: /\\bDISCARD\\s+PLANS\\b/ },\n          { begin: /\\bREFERENCING\\s+(OLD|NEW)\\b/ },\n          { begin: /\\bSKIP\\s+LOCKED\\b/ },\n          { begin: /\\bGROUPING\\s+SETS\\b/ },\n          { begin: /\\b(BINARY|INSENSITIVE|SCROLL|NO\\s+SCROLL)\\s+(CURSOR|FOR)\\b/ },\n          { begin: /\\b(WITH|WITHOUT)\\s+HOLD\\b/ },\n          { begin: /\\bWITH\\s+(CASCADED|LOCAL)\\s+CHECK\\s+OPTION\\b/ },\n          { begin: /\\bEXCLUDE\\s+(TIES|NO\\s+OTHERS)\\b/ },\n          { begin: /\\bFORMAT\\s+(TEXT|XML|JSON|YAML)\\b/ },\n          { begin: /\\bSET\\s+((SESSION|LOCAL)\\s+)?NAMES\\b/ },\n          { begin: /\\bIS\\s+(NOT\\s+)?UNKNOWN\\b/ },\n          { begin: /\\bSECURITY\\s+LABEL\\b/ },\n          { begin: /\\bSTANDALONE\\s+(YES|NO|NO\\s+VALUE)\\b/ },\n          { begin: /\\bWITH\\s+(NO\\s+)?DATA\\b/ },\n          { begin: /\\b(FOREIGN|SET)\\s+DATA\\b/ },\n          { begin: /\\bSET\\s+(CATALOG|CONSTRAINTS)\\b/ },\n          { begin: /\\b(WITH|FOR)\\s+ORDINALITY\\b/ },\n          { begin: /\\bIS\\s+(NOT\\s+)?DOCUMENT\\b/ },\n          { begin: /\\bXML\\s+OPTION\\s+(DOCUMENT|CONTENT)\\b/ },\n          { begin: /\\b(STRIP|PRESERVE)\\s+WHITESPACE\\b/ },\n          { begin: /\\bNO\\s+(ACTION|MAXVALUE|MINVALUE)\\b/ },\n          { begin: /\\bPARTITION\\s+BY\\s+(RANGE|LIST|HASH)\\b/ },\n          { begin: /\\bAT\\s+TIME\\s+ZONE\\b/ },\n          { begin: /\\bGRANTED\\s+BY\\b/ },\n          { begin: /\\bRETURN\\s+(QUERY|NEXT)\\b/ },\n          { begin: /\\b(ATTACH|DETACH)\\s+PARTITION\\b/ },\n          { begin: /\\bFORCE\\s+ROW\\s+LEVEL\\s+SECURITY\\b/ },\n          { begin: /\\b(INCLUDING|EXCLUDING)\\s+(COMMENTS|CONSTRAINTS|DEFAULTS|IDENTITY|INDEXES|STATISTICS|STORAGE|ALL)\\b/ },\n          { begin: /\\bAS\\s+(ASSIGNMENT|IMPLICIT|PERMISSIVE|RESTRICTIVE|ENUM|RANGE)\\b/ }\n        ]\n      },\n      // functions named as keywords, followed by '('\n      { begin: /\\b(FORMAT|FAMILY|VERSION)\\s*\\(/\n        // keywords: { built_in: 'FORMAT FAMILY VERSION' }\n      },\n      // INCLUDE ( ... ) in index_parameters in CREATE TABLE\n      {\n        begin: /\\bINCLUDE\\s*\\(/,\n        keywords: 'INCLUDE'\n      },\n      // not highlight RANGE if not in frame_clause (not 100% correct, but seems satisfactory)\n      { begin: /\\bRANGE(?!\\s*(BETWEEN|UNBOUNDED|CURRENT|[-0-9]+))/ },\n      // disable highlighting in commands CREATE AGGREGATE/COLLATION/DATABASE/OPERTOR/TEXT SEARCH .../TYPE\n      // and in PL/pgSQL RAISE ... USING\n      { begin: /\\b(VERSION|OWNER|TEMPLATE|TABLESPACE|CONNECTION\\s+LIMIT|PROCEDURE|RESTRICT|JOIN|PARSER|COPY|START|END|COLLATION|INPUT|ANALYZE|STORAGE|LIKE|DEFAULT|DELIMITER|ENCODING|COLUMN|CONSTRAINT|TABLE|SCHEMA)\\s*=/ },\n      // PG_smth; HAS_some_PRIVILEGE\n      {\n        // className: 'built_in',\n        begin: /\\b(PG_\\w+?|HAS_[A-Z_]+_PRIVILEGE)\\b/,\n        relevance: 10\n      },\n      // extract\n      {\n        begin: /\\bEXTRACT\\s*\\(/,\n        end: /\\bFROM\\b/,\n        returnEnd: true,\n        keywords: {\n          // built_in: 'EXTRACT',\n          type: 'CENTURY DAY DECADE DOW DOY EPOCH HOUR ISODOW ISOYEAR MICROSECONDS '\n                        + 'MILLENNIUM MILLISECONDS MINUTE MONTH QUARTER SECOND TIMEZONE TIMEZONE_HOUR '\n                        + 'TIMEZONE_MINUTE WEEK YEAR' }\n      },\n      // xmlelement, xmlpi - special NAME\n      {\n        begin: /\\b(XMLELEMENT|XMLPI)\\s*\\(\\s*NAME/,\n        keywords: {\n          // built_in: 'XMLELEMENT XMLPI',\n          keyword: 'NAME' }\n      },\n      // xmlparse, xmlserialize\n      {\n        begin: /\\b(XMLPARSE|XMLSERIALIZE)\\s*\\(\\s*(DOCUMENT|CONTENT)/,\n        keywords: {\n          // built_in: 'XMLPARSE XMLSERIALIZE',\n          keyword: 'DOCUMENT CONTENT' }\n      },\n      // Sequences. We actually skip everything between CACHE|INCREMENT|MAXVALUE|MINVALUE and\n      // nearest following numeric constant. Without with trick we find a lot of \"keywords\"\n      // in 'avrasm' autodetection test...\n      {\n        beginKeywords: 'CACHE INCREMENT MAXVALUE MINVALUE',\n        end: hljs.C_NUMBER_RE,\n        returnEnd: true,\n        keywords: 'BY CACHE INCREMENT MAXVALUE MINVALUE'\n      },\n      // WITH|WITHOUT TIME ZONE as part of datatype\n      {\n        className: 'type',\n        begin: /\\b(WITH|WITHOUT)\\s+TIME\\s+ZONE\\b/\n      },\n      // INTERVAL optional fields\n      {\n        className: 'type',\n        begin: /\\bINTERVAL\\s+(YEAR|MONTH|DAY|HOUR|MINUTE|SECOND)(\\s+TO\\s+(MONTH|HOUR|MINUTE|SECOND))?\\b/\n      },\n      // Pseudo-types which allowed only as return type\n      {\n        begin: /\\bRETURNS\\s+(LANGUAGE_HANDLER|TRIGGER|EVENT_TRIGGER|FDW_HANDLER|INDEX_AM_HANDLER|TSM_HANDLER)\\b/,\n        keywords: {\n          keyword: 'RETURNS',\n          type: 'LANGUAGE_HANDLER TRIGGER EVENT_TRIGGER FDW_HANDLER INDEX_AM_HANDLER TSM_HANDLER'\n        }\n      },\n      // Known functions - only when followed by '('\n      { begin: '\\\\b(' + FUNCTIONS_RE + ')\\\\s*\\\\('\n        // keywords: { built_in: FUNCTIONS }\n      },\n      // Types\n      { begin: '\\\\.(' + TYPES_RE + ')\\\\b' // prevent highlight as type, say, 'oid' in 'pgclass.oid'\n      },\n      {\n        begin: '\\\\b(' + TYPES_RE + ')\\\\s+PATH\\\\b', // in XMLTABLE\n        keywords: {\n          keyword: 'PATH', // hopefully no one would use PATH type in XMLTABLE...\n          type: TYPES.replace('PATH ', '')\n        }\n      },\n      {\n        className: 'type',\n        begin: '\\\\b(' + TYPES_RE + ')\\\\b'\n      },\n      // Strings, see https://www.postgresql.org/docs/11/static/sql-syntax-lexical.html#SQL-SYNTAX-CONSTANTS\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '\\'',\n        contains: [ { begin: '\\'\\'' } ]\n      },\n      {\n        className: 'string',\n        begin: '(e|E|u&|U&)\\'',\n        end: '\\'',\n        contains: [ { begin: '\\\\\\\\.' } ],\n        relevance: 10\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: DOLLAR_STRING,\n        end: DOLLAR_STRING,\n        contains: [\n          {\n            // actually we want them all except SQL; listed are those with known implementations\n            // and XML + JSON just in case\n            subLanguage: [\n              'pgsql',\n              'perl',\n              'python',\n              'tcl',\n              'r',\n              'lua',\n              'java',\n              'php',\n              'ruby',\n              'bash',\n              'scheme',\n              'xml',\n              'json'\n            ],\n            endsWithParent: true\n          }\n        ]\n      }),\n      // identifiers in quotes\n      {\n        begin: '\"',\n        end: '\"',\n        contains: [ { begin: '\"\"' } ]\n      },\n      // numbers\n      hljs.C_NUMBER_MODE,\n      // comments\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      // PL/pgSQL staff\n      // %ROWTYPE, %TYPE, $n\n      {\n        className: 'meta',\n        variants: [\n          { // %TYPE, %ROWTYPE\n            begin: '%(ROW)?TYPE',\n            relevance: 10\n          },\n          { // $n\n            begin: '\\\\$\\\\d+' },\n          { // #compiler option\n            begin: '^#\\\\w',\n            end: '$'\n          }\n        ]\n      },\n      // <<labeles>>\n      {\n        className: 'symbol',\n        begin: LABEL,\n        relevance: 10\n      }\n    ]\n  };\n}\n\nexport { pgsql as default };\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d730268\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"run-info modeling-data-flow-detail-run-dialog-info\" }\nconst _hoisted_2 = { class: \"info-1\" }\nconst _hoisted_3 = { class: \"content\" }\nconst _hoisted_4 = {\n  key: 0,\n  border: \"1\",\n  cellspacing: \"0\",\n  cellpadding: \"0\"\n}\nconst _hoisted_5 = { class: \"header\" }\nconst _hoisted_6 = {\n  key: 1,\n  class: \"runsql-other\"\n}\nconst _hoisted_7 = {\n  key: 0,\n  class: \"empty\"\n}\n\nimport 'highlight.js/styles/atom-one-dark.css'\nimport { getSQL, runSql } from '@/api/modeling'\nimport { useDataFlowStore } from '@/store/modules/modeling/data-flow'\nimport { Graph } from '@antv/x6'\nimport { KeyValue } from '@antv/x6/lib/types'\nimport {\n  Modal as AModal,\n  Spin as ASpin\n} from '@arco-design/web-vue'\nimport { reactive } from 'vue'\nimport { checkData } from '../../utils/operateJson'\nimport 'highlight.js/lib/common'\nimport hljsVuePlugin from '@highlightjs/vue-plugin'\nimport hljs from 'highlight.js/lib/core'\nimport pgsql from 'highlight.js/lib/languages/pgsql'\nimport { useI18n } from 'vue-i18n'\nimport { useRoute } from 'vue-router'\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props, { expose }) {\n\nconst route = useRoute()\nconst { t } = useI18n()\nhljs.registerLanguage('pgsql', pgsql)\nconst highlightjs = hljsVuePlugin.component\nconst dFStore = useDataFlowStore()\nconst dData = reactive({\n  show: false,\n  title: t('modeling.dialogs.Run.5m7iqlci0rk0'),\n  message: t('modeling.dialogs.Run.5m7iqlci0vk0'),\n  loading: false,\n  sql: [] as any,\n  isRun: false,\n  jsonData: {} as KeyValue,\n  data: [] as Array<KeyValue>\n})\nconst open = (graph: Graph, data: any, type: string) => {\n  if (dFStore.getFlowDataInfo) {\n    dData.show = true\n    dData.isRun = false\n    dData.jsonData = data\n    dData.loading = true\n    dData.title = t('modeling.dialogs.Run.5m7iqlci0y80')\n    if (type === `run`) {\n      dData.title = t('modeling.dialogs.Run.5m7iqlci10s0')\n      getSQL({ ...data, dataFlowId: window.$wujie?.props.data.id }).then((res: KeyValue) => {\n        let arr: KeyValue[] = []\n        for (let i in res.data) arr.push({ name: i, sql: res.data[i] })\n        dData.sql = arr\n        if (checkData(dData.jsonData) && dFStore.getFlowDataInfo) {\n          runSql({ ...dData.jsonData, dataFlowId: window.$wujie?.props.data.id }).then((res: KeyValue) => {\n            dData.loading = false\n            dData.isRun = true\n            if (res && Number(res.code) === 200) {\n              let arr: KeyValue[] = []\n              for (let i in res.data) {\n                arr.push({ name: i, runData: res.data[i] })\n              }\n              dData.data = arr\n            }\n          })\n        }\n      })\n    } else {\n      getSQL({ ...data, dataFlowId: window.$wujie?.props.data.id }).then((res: KeyValue) => {\n        dData.loading = false\n        let arr: KeyValue[] = []\n        for (let i in res.data) arr.push({ name: i, sql: res.data[i] })\n        dData.sql = arr\n      })\n    }\n  }\n}\nconst close = () => {\n  dData.show = false\n}\nexpose({ open })\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_tab_pane = _resolveComponent(\"a-tab-pane\")!\n  const _component_a_tabs = _resolveComponent(\"a-tabs\")!\n\n  return (_openBlock(), _createBlock(_unref(AModal), {\n    class: \"run-container\",\n    visible: _unref(dData).show,\n    title: _unref(dData).title,\n    footer: false,\n    onCancel: close,\n    \"modal-style\": { width: '800px' }\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_unref(ASpin), {\n        loading: _unref(dData).loading,\n        tip: _unref(dData).message,\n        style: {\"width\":\"100%\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_a_tabs, { \"default-active-key\": 0 }, {\n            default: _withCtx(() => [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(dData).sql, (item, sqlKey) => {\n                return (_openBlock(), _createBlock(_component_a_tab_pane, {\n                  key: sqlKey,\n                  title: item.name\n                }, {\n                  default: _withCtx(() => [\n                    _createElementVNode(\"div\", _hoisted_1, [\n                      _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t('modeling.dy_common.sqlyunxing')), 1),\n                      _withDirectives(_createElementVNode(\"div\", {\n                        class: \"sql\",\n                        ref: (_value, _refs) => {\n                          _refs['copyRef'] = _value\n                        }\n                      }, [\n                        _createVNode(_unref(highlightjs), {\n                          autodetect: \"\",\n                          language: \"pgSQL\",\n                          code: item.sql\n                        }, null, 8, [\"code\"])\n                      ], 512), [\n                        [_vShow, _unref(dData).sql]\n                      ]),\n                      _withDirectives(_createElementVNode(\"div\", { class: \"info-1\" }, _toDisplayString(_ctx.$t('modeling.dialogs.Run.5m7iqlci0400')), 513), [\n                        [_vShow, _unref(dData).isRun]\n                      ]),\n                      _withDirectives(_createElementVNode(\"div\", _hoisted_3, [\n                        (_unref(dData).data.length > 0 && Array.isArray(_unref(dData).data[sqlKey].runData))\n                          ? (_openBlock(), _createElementBlock(\"table\", _hoisted_4, [\n                              _createElementVNode(\"thead\", null, [\n                                _createElementVNode(\"tr\", _hoisted_5, [\n                                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(dData).data[sqlKey].runData[0], (row, rowKey) => {\n                                    return (_openBlock(), _createElementBlock(\"td\", {\n                                      key: `rowKey1thead${rowKey}`\n                                    }, _toDisplayString(rowKey), 1))\n                                  }), 128))\n                                ])\n                              ]),\n                              _createElementVNode(\"tbody\", null, [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(dData).data[sqlKey].runData, (row, rowKey) => {\n                                  return (_openBlock(), _createElementBlock(\"tr\", {\n                                    key: `rowKey1${rowKey}`\n                                  }, [\n                                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (colValue, colKey, colIndex) => {\n                                      return (_openBlock(), _createElementBlock(\"td\", {\n                                        class: \"col\",\n                                        key: `${rowKey}col${colIndex}body`\n                                      }, _toDisplayString(colValue), 1))\n                                    }), 128))\n                                  ]))\n                                }), 128))\n                              ])\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                              _createElementVNode(\"span\", null, _toDisplayString(_unref(dData).data[sqlKey] ? _unref(dData).data[sqlKey].runData : ''), 1)\n                            ]))\n                      ], 512), [\n                        [_vShow, _unref(dData).isRun]\n                      ])\n                    ])\n                  ]),\n                  _: 2\n                }, 1032, [\"title\"]))\n              }), 128))\n            ]),\n            _: 1\n          }),\n          (_unref(dData).sql.length === 0)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(_ctx.$t('modeling.dy_common.noResult')), 1))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _: 1\n      }, 8, [\"loading\", \"tip\"])\n    ]),\n    _: 1\n  }, 8, [\"visible\", \"title\"]))\n}\n}\n\n})","import script from \"./Run.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Run.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./Run.vue?vue&type=style&index=0&id=2d730268&scoped=true&lang=less\"\nimport \"./Run.vue?vue&type=style&index=1&id=2d730268&lang=less\"\n\nimport exportComponent from \"/Users/xielibo/ideawork/huawei/base-ops/web-ui/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2d730268\"]])\n\nexport default __exports__","var deepFreezeEs6 = {exports: {}};\n\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    // Freeze self\n    Object.freeze(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    return obj;\n}\n\ndeepFreezeEs6.exports = deepFreeze;\ndeepFreezeEs6.exports.default = deepFreeze;\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  // rarely we can have a sublanguage where language is undefined\n  // TODO: track down why\n  return !!node.scope || (node.sublanguage && node.language);\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst scopeToCSSClass = (name, { prefix }) => {\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = \"\";\n    if (node.sublanguage) {\n      className = `language-${node.language}`;\n    } else {\n      className = scopeToCSSClass(node.scope, { prefix: this.classPrefix });\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\n/** @returns {DataNode} */\nconst newNode = (opts = {}) => {\n  /** @type DataNode */\n  const result = { children: [] };\n  Object.assign(result, opts);\n  return result;\n};\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = newNode();\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} scope */\n  openNode(scope) {\n    /** @type Node */\n    const node = newNode({ scope });\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, scope)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(scope)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} scope\n   */\n  addKeyword(text, scope) {\n    if (text === \"\") { return; }\n\n    this.openNode(scope);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.sublanguage = true;\n    node.language = name;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    scope: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n    IDENT_RE: IDENT_RE,\n    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n    NUMBER_RE: NUMBER_RE,\n    C_NUMBER_RE: C_NUMBER_RE,\n    BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n    RE_STARTERS_RE: RE_STARTERS_RE,\n    SHEBANG: SHEBANG,\n    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n    APOS_STRING_MODE: APOS_STRING_MODE,\n    QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n    COMMENT: COMMENT,\n    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n    HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n    NUMBER_MODE: NUMBER_MODE,\n    C_NUMBER_MODE: C_NUMBER_MODE,\n    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n    REGEXP_MODE: REGEXP_MODE,\n    TITLE_MODE: TITLE_MODE,\n    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n    METHOD_GUARD: METHOD_GUARD,\n    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type KeywordDict */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.6.0\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitter.addKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substring(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitter.addKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitter.addKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substring(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitter.addKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substring(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance: relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index: index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language: language });\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  function boot() {\n    // if a highlight was requested before DOM was loaded, do now\n    if (wantsHighlight) highlightAll();\n  }\n\n  // make sure we are in the browser environment\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', boot, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreezeEs6.exports(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n"],"names":["defineState","graph","dataFlowInfo","rawData","useData","useDatabase","useTable","useDataFlowStore","defineStore","state","JSON","parse","stringify","getters","getTableSelectList","getFieldsSelectList","length","database","tableList","forEach","item","arr","group","fields","index","findIndex","item2","tablename","push","getFlowDataInfo","getFieldsByTable","tableName","getUseTable","getUseDatabase","actions","setGraph","this","$patch","initState","Promise","resolve","clearUse","setFlowDataInfo","info","setDatabaseInfo","dbName","clusterNodeId","schema","reject","Object","keys","includes","getTableList","then","res","Number","code","data","map","tables","Message","catch","setDatabaseTableInfo","params","tableKey","noUse","getTableFields","split","join","removeDatabaseTable","indexOf","splice","r","props","type","String","required","language","default","autodetect","Boolean","ignoreIllegals","setup","e","n","value","o","className","highlightedCode","l","console","warn","replace","a","render","class","innerHTML","install","component","pgsql","hljs","COMMENT_MODE","COMMENT","UNQUOTED_IDENT","DOLLAR_STRING","LABEL","SQL_KW","ROLE_ATTRS","PLPGSQL_KW","TYPES","TYPES_RE","trim","val","SQL_BI","PLPGSQL_BI","PLPGSQL_EXCEPTIONS","FUNCTIONS","FUNCTIONS_RE","name","aliases","supersetOf","case_insensitive","keywords","keyword","built_in","illegal","contains","variants","begin","relevance","end","returnEnd","beginKeywords","C_NUMBER_RE","END_SAME_AS_BEGIN","subLanguage","endsWithParent","C_NUMBER_MODE","C_BLOCK_COMMENT_MODE","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","key","border","cellspacing","cellpadding","_hoisted_5","_hoisted_6","_hoisted_7","_defineComponent","__props","expose","useRoute","t","useI18n","highlightjs","hljsVuePlugin","dFStore","dData","reactive","show","title","message","loading","sql","isRun","jsonData","open","getSQL","dataFlowId","window","$wujie","id","i","checkData","runSql","runData","close","_ctx","_cache","_component_a_tab_pane","_resolveComponent","_component_a_tabs","_openBlock","_createBlock","_unref","AModal","visible","footer","onCancel","width","_withCtx","_createVNode","ASpin","tip","style","_createElementBlock","_Fragment","_renderList","sqlKey","_createElementVNode","_toDisplayString","$t","_withDirectives","ref","_value","_refs","_vShow","Array","isArray","row","rowKey","colValue","colKey","colIndex","_","_createCommentVNode","__exports__","deepFreezeEs6","exports","deepFreeze","obj","Map","clear","delete","set","Error","Set","add","freeze","getOwnPropertyNames","prop","isFrozen","Response","constructor","mode","undefined","isMatchIgnored","ignoreMatch","escapeHTML","inherit$1","original","objects","result","create","SPAN_CLOSE","emitsWrappingTags","node","scope","sublanguage","scopeToCSSClass","prefix","pieces","shift","x","repeat","HTMLRenderer","parseTree","options","buffer","classPrefix","walk","addText","text","openNode","span","closeNode","newNode","opts","children","assign","TokenTree","rootNode","stack","top","root","pop","closeAllNodes","toJSON","builder","_walk","static","child","every","el","_collapse","TokenTreeEmitter","super","addKeyword","addSublanguage","emitter","toHTML","renderer","finalize","source","re","lookahead","concat","anyNumberOfTimes","optional","args","joined","stripOptionsFromArgs","either","capture","countMatchGroups","RegExp","toString","exec","startsWith","lexeme","match","BACKREF_RE","_rewriteBackreferences","regexps","joinWith","numCaptures","regex","offset","out","substring","MATCH_NOTHING_RE","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","SHEBANG","beginShebang","binary","m","resp","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","modeOptions","excludeBegin","ENGLISH_WORD","C_LINE_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","_beginMatch","MODES","__proto__","skipIfHasPrecedingDot","response","before","input","scopeClassName","_parent","parent","__beforeBegin","compileIllegal","compileMatch","compileRelevance","beforeMatchExt","beforeMatch","starts","originalMode","endsParent","COMMON_KEYWORDS","DEFAULT_KEYWORD_SCOPE","compileKeywords","rawKeywords","caseInsensitive","scopeName","compiledKeywords","compileList","keywordList","toLowerCase","pair","scoreForKeyword","providedScore","commonKeyword","seenDeprecations","error","log","deprecated","version","MultiClassError","remapScopeNames","regexes","scopeNames","emit","positions","_emit","_multi","beginMultiClass","skip","returnBegin","beginScope","endMultiClass","excludeEnd","endScope","scopeSugar","MultiClass","_wrap","compileLanguage","langRe","global","unicodeRegex","MultiRegex","matchIndexes","matchAt","position","addRule","compile","terminators","matcherRe","lastIndex","s","matchData","ResumableMultiRegex","rules","multiRegexes","count","regexIndex","getMatcher","matcher","slice","resumingScanAtSamePosition","considerAll","m2","buildModeRegex","mm","term","rule","terminatorEnd","compileMode","cmode","isCompiled","ext","compilerExtensions","keywordPattern","$pattern","keywordPatternRe","beginRe","endRe","illegalRe","c","expandOrCloneMode","classNameAliases","dependencyOnParent","cachedVariants","variant","HTMLInjectionError","reason","html","escape","inherit","NO_MATCH","Symbol","MAX_KEYWORD_HITS","HLJS","languages","plugins","SAFE_MODE","LANGUAGE_NOT_FOUND","PLAINTEXT_LANGUAGE","disableAutodetect","ignoreUnescapedHTML","throwUnescapedHTML","noHighlightRe","languageDetectRe","cssSelector","__emitter","shouldNotHighlight","languageName","test","blockLanguage","block","classes","parentNode","getLanguage","find","_class","highlight","codeOrLanguageName","optionsOrCode","context","fire","_highlight","codeToHighlight","continuation","keywordHits","keywordData","matchText","processKeywords","modeBuffer","buf","word","kind","keywordRelevance","cssClass","processSubLanguage","continuations","highlightAuto","_emitter","processBuffer","emitMultiClass","max","klass","startNewMode","endOfMode","matchPlusRemainder","matched","doIgnore","resumeScanAtSamePosition","doBeginMatch","newMode","beforeCallbacks","cb","doEndMatch","endMode","origin","processContinuations","list","current","unshift","lastMatch","processLexeme","textBeforeMatch","err","badRule","processed","iterations","md","processedCount","_top","_illegalBy","resultSoFar","errorRaised","justTextHighlightResult","languageSubset","plaintext","results","filter","autoDetection","sorted","sort","b","best","secondBest","updateClassName","element","currentLang","resultLang","classList","highlightElement","textContent","configure","userOptions","initHighlighting","highlightAll","initHighlightingOnLoad","wantsHighlight","document","readyState","blocks","querySelectorAll","boot","registerLanguage","languageDefinition","lang","error$1","rawDefinition","bind","registerAliases","unregisterLanguage","alias","listLanguages","aliasList","upgradePluginAPI","plugin","addPlugin","event","deprecateHighlightBlock","addEventListener","highlightBlock","debugMode","safeMode","versionString","module","HighlightJS"],"sourceRoot":""}